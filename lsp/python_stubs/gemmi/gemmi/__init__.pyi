import enum
import nanobind
from _typeshed import Incomplete
from typing import ClassVar

__version__: str

class CrystalSystem(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Triclinic: ClassVar[CrystalSystem] = ...
    Monoclinic: ClassVar[CrystalSystem] = ...
    Orthorhombic: ClassVar[CrystalSystem] = ...
    Tetragonal: ClassVar[CrystalSystem] = ...
    Trigonal: ClassVar[CrystalSystem] = ...
    Hexagonal: ClassVar[CrystalSystem] = ...
    Cubic: ClassVar[CrystalSystem] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class Op:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    triplet: ClassVar[nanobind.nb_method] = ...
    inverse: ClassVar[nanobind.nb_method] = ...
    wrap: ClassVar[nanobind.nb_method] = ...
    translated: ClassVar[nanobind.nb_method] = ...
    transposed_rot: ClassVar[nanobind.nb_method] = ...
    det_rot: ClassVar[nanobind.nb_method] = ...
    rot_type: ClassVar[nanobind.nb_method] = ...
    combine: ClassVar[nanobind.nb_method] = ...
    seitz: ClassVar[nanobind.nb_method] = ...
    float_seitz: ClassVar[nanobind.nb_method] = ...
    apply_to_xyz: ClassVar[nanobind.nb_method] = ...
    apply_to_hkl: ClassVar[nanobind.nb_method] = ...
    phase_shift: ClassVar[nanobind.nb_method] = ...
    __mul__: ClassVar[nanobind.nb_method] = ...
    __rmul__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __copy__: ClassVar[nanobind.nb_method] = ...
    __deepcopy__: ClassVar[nanobind.nb_method] = ...
    __hash__: ClassVar[nanobind.nb_method] = ...
    rot: Incomplete
    tran: Incomplete
    @property
    def DEN(self): ...
parse_triplet: nanobind.nb_func
parse_triplet_part: nanobind.nb_func
make_triplet_part: nanobind.nb_func

class GroupOps:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __deepcopy__: ClassVar[nanobind.nb_method] = ...
    add_missing_elements: ClassVar[nanobind.nb_method] = ...
    find_centering: ClassVar[nanobind.nb_method] = ...
    has_same_centring: ClassVar[nanobind.nb_method] = ...
    has_same_rotations: ClassVar[nanobind.nb_method] = ...
    is_centrosymmetric: ClassVar[nanobind.nb_method] = ...
    is_reflection_centric: ClassVar[nanobind.nb_method] = ...
    centric_flag_array: ClassVar[nanobind.nb_method] = ...
    epsilon_factor_without_centering: ClassVar[nanobind.nb_method] = ...
    epsilon_factor: ClassVar[nanobind.nb_method] = ...
    epsilon_factor_array: ClassVar[nanobind.nb_method] = ...
    epsilon_factor_without_centering_array: ClassVar[nanobind.nb_method] = ...
    is_systematically_absent: ClassVar[nanobind.nb_method] = ...
    systematic_absences: ClassVar[nanobind.nb_method] = ...
    find_grid_factors: ClassVar[nanobind.nb_method] = ...
    change_basis_forward: ClassVar[nanobind.nb_method] = ...
    change_basis_backward: ClassVar[nanobind.nb_method] = ...
    derive_symmorphic: ClassVar[nanobind.nb_method] = ...
    add_inversion: ClassVar[nanobind.nb_method] = ...
    sym_ops: Incomplete
    cen_ops: Incomplete

class SpaceGroup:
    __new__: ClassVar[nanobind.nb_func] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    xhm: ClassVar[nanobind.nb_method] = ...
    centring_type: ClassVar[nanobind.nb_method] = ...
    short_name: ClassVar[nanobind.nb_method] = ...
    is_enantiomorphic: ClassVar[nanobind.nb_method] = ...
    is_sohncke: ClassVar[nanobind.nb_method] = ...
    is_symmorphic: ClassVar[nanobind.nb_method] = ...
    point_group_hm: ClassVar[nanobind.nb_method] = ...
    laue_str: ClassVar[nanobind.nb_method] = ...
    crystal_system: ClassVar[nanobind.nb_method] = ...
    crystal_system_str: ClassVar[nanobind.nb_method] = ...
    is_centrosymmetric: ClassVar[nanobind.nb_method] = ...
    monoclinic_unique_axis: ClassVar[nanobind.nb_method] = ...
    is_reference_setting: ClassVar[nanobind.nb_method] = ...
    centred_to_primitive: ClassVar[nanobind.nb_method] = ...
    change_of_hand_op: ClassVar[nanobind.nb_method] = ...
    operations: ClassVar[nanobind.nb_method] = ...
    switch_to_asu: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __reduce__: ClassVar[nanobind.nb_method] = ...
    @property
    def number(self): ...
    @property
    def ccp4(self): ...
    @property
    def hm(self): ...
    @property
    def ext(self): ...
    @property
    def qualifier(self): ...
    @property
    def hall(self): ...
    @property
    def basisop(self): ...

class ReciprocalAsu:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    is_in: ClassVar[nanobind.nb_method] = ...
    condition_str: ClassVar[nanobind.nb_method] = ...
    to_asu: ClassVar[nanobind.nb_method] = ...
spacegroup_table: nanobind.nb_func
spacegroup_table_itb: nanobind.nb_func
generators_from_hall: nanobind.nb_func
symops_from_hall: nanobind.nb_func
find_spacegroup_by_number: nanobind.nb_func
find_spacegroup_by_name: nanobind.nb_func
get_spacegroup_reference_setting: nanobind.nb_func
find_spacegroup_by_ops: nanobind.nb_func
seitz_to_op: nanobind.nb_func

class Vec3:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    normalized: ClassVar[nanobind.nb_method] = ...
    dot: ClassVar[nanobind.nb_method] = ...
    cross: ClassVar[nanobind.nb_method] = ...
    length: ClassVar[nanobind.nb_method] = ...
    approx: ClassVar[nanobind.nb_method] = ...
    tolist: ClassVar[nanobind.nb_method] = ...
    fromlist: ClassVar[nanobind.nb_method] = ...
    __add__: ClassVar[nanobind.nb_method] = ...
    __sub__: ClassVar[nanobind.nb_method] = ...
    __iadd__: ClassVar[nanobind.nb_method] = ...
    __isub__: ClassVar[nanobind.nb_method] = ...
    __mul__: ClassVar[nanobind.nb_method] = ...
    __imul__: ClassVar[nanobind.nb_method] = ...
    __rmul__: ClassVar[nanobind.nb_method] = ...
    __truediv__: ClassVar[nanobind.nb_method] = ...
    __itruediv__: ClassVar[nanobind.nb_method] = ...
    __neg__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    x: Incomplete
    y: Incomplete
    z: Incomplete

class Mat33:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __array__: ClassVar[nanobind.nb_method] = ...
    row_copy: ClassVar[nanobind.nb_method] = ...
    column_copy: ClassVar[nanobind.nb_method] = ...
    __add__: ClassVar[nanobind.nb_method] = ...
    __sub__: ClassVar[nanobind.nb_method] = ...
    multiply: ClassVar[nanobind.nb_method] = ...
    __matmul__: ClassVar[nanobind.nb_method] = ...
    left_multiply: ClassVar[nanobind.nb_method] = ...
    multiply_by_diagonal: ClassVar[nanobind.nb_method] = ...
    transpose: ClassVar[nanobind.nb_method] = ...
    trace: ClassVar[nanobind.nb_method] = ...
    approx: ClassVar[nanobind.nb_method] = ...
    determinant: ClassVar[nanobind.nb_method] = ...
    inverse: ClassVar[nanobind.nb_method] = ...
    is_identity: ClassVar[nanobind.nb_method] = ...
    tolist: ClassVar[nanobind.nb_method] = ...
    fromlist: ClassVar[nanobind.nb_method] = ...
    @property
    def array(self): ...

class SMat33d:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    elements_pdb: ClassVar[nanobind.nb_method] = ...
    elements_voigt: ClassVar[nanobind.nb_method] = ...
    as_mat33: ClassVar[nanobind.nb_method] = ...
    trace: ClassVar[nanobind.nb_method] = ...
    nonzero: ClassVar[nanobind.nb_method] = ...
    determinant: ClassVar[nanobind.nb_method] = ...
    inverse: ClassVar[nanobind.nb_method] = ...
    scaled: ClassVar[nanobind.nb_method] = ...
    added_kI: ClassVar[nanobind.nb_method] = ...
    r_u_r: ClassVar[nanobind.nb_method] = ...
    multiply: ClassVar[nanobind.nb_method] = ...
    __add__: ClassVar[nanobind.nb_method] = ...
    __sub__: ClassVar[nanobind.nb_method] = ...
    transformed_by: ClassVar[nanobind.nb_method] = ...
    calculate_eigenvalues: ClassVar[nanobind.nb_method] = ...
    u11: Incomplete
    u22: Incomplete
    u33: Incomplete
    u12: Incomplete
    u13: Incomplete
    u23: Incomplete

class SMat33f:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    elements_pdb: ClassVar[nanobind.nb_method] = ...
    elements_voigt: ClassVar[nanobind.nb_method] = ...
    as_mat33: ClassVar[nanobind.nb_method] = ...
    trace: ClassVar[nanobind.nb_method] = ...
    nonzero: ClassVar[nanobind.nb_method] = ...
    determinant: ClassVar[nanobind.nb_method] = ...
    inverse: ClassVar[nanobind.nb_method] = ...
    scaled: ClassVar[nanobind.nb_method] = ...
    added_kI: ClassVar[nanobind.nb_method] = ...
    r_u_r: ClassVar[nanobind.nb_method] = ...
    multiply: ClassVar[nanobind.nb_method] = ...
    __add__: ClassVar[nanobind.nb_method] = ...
    __sub__: ClassVar[nanobind.nb_method] = ...
    transformed_by: ClassVar[nanobind.nb_method] = ...
    calculate_eigenvalues: ClassVar[nanobind.nb_method] = ...
    u11: Incomplete
    u22: Incomplete
    u33: Incomplete
    u12: Incomplete
    u13: Incomplete
    u23: Incomplete

class Transform:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    inverse: ClassVar[nanobind.nb_method] = ...
    apply: ClassVar[nanobind.nb_method] = ...
    combine: ClassVar[nanobind.nb_method] = ...
    __matmul__: ClassVar[nanobind.nb_method] = ...
    is_identity: ClassVar[nanobind.nb_method] = ...
    approx: ClassVar[nanobind.nb_method] = ...
    @property
    def mat(self): ...
    @property
    def vec(self): ...

class Position(Vec3):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    dist: ClassVar[nanobind.nb_method] = ...
    __add__: ClassVar[nanobind.nb_method] = ...
    __sub__: ClassVar[nanobind.nb_method] = ...
    __iadd__: ClassVar[nanobind.nb_method] = ...
    __isub__: ClassVar[nanobind.nb_method] = ...
    __mul__: ClassVar[nanobind.nb_method] = ...
    __imul__: ClassVar[nanobind.nb_method] = ...
    __rmul__: ClassVar[nanobind.nb_method] = ...
    __truediv__: ClassVar[nanobind.nb_method] = ...
    __itruediv__: ClassVar[nanobind.nb_method] = ...
    __neg__: ClassVar[nanobind.nb_method] = ...

class Fractional(Vec3):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    wrap_to_unit: ClassVar[nanobind.nb_method] = ...
    wrap_to_zero: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __add__: ClassVar[nanobind.nb_method] = ...
    __sub__: ClassVar[nanobind.nb_method] = ...

class PositionBox:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    get_size: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    add_margin: ClassVar[nanobind.nb_method] = ...
    minimum: Incomplete
    maximum: Incomplete

class FractionalBox:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    get_size: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    add_margin: ClassVar[nanobind.nb_method] = ...
    minimum: Incomplete
    maximum: Incomplete

class FTransform(Transform):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    apply: ClassVar[nanobind.nb_method] = ...

class NearestImage:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    dist: ClassVar[nanobind.nb_method] = ...
    same_asu: ClassVar[nanobind.nb_method] = ...
    symmetry_code: ClassVar[nanobind.nb_method] = ...
    @property
    def sym_idx(self): ...
    @property
    def pbc_shift(self): ...

class Asu(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Same: ClassVar[Asu] = ...
    Different: ClassVar[Asu] = ...
    Any: ClassVar[Asu] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class UnitCell:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set: ClassVar[nanobind.nb_method] = ...
    changed_basis_forward: ClassVar[nanobind.nb_method] = ...
    changed_basis_backward: ClassVar[nanobind.nb_method] = ...
    is_compatible_with_spacegroup: ClassVar[nanobind.nb_method] = ...
    is_crystal: ClassVar[nanobind.nb_method] = ...
    approx: ClassVar[nanobind.nb_method] = ...
    is_similar: ClassVar[nanobind.nb_method] = ...
    calculate_u_eq: ClassVar[nanobind.nb_method] = ...
    fractionalize: ClassVar[nanobind.nb_method] = ...
    orthogonalize: ClassVar[nanobind.nb_method] = ...
    orthogonalize_box: ClassVar[nanobind.nb_method] = ...
    op_as_transform: ClassVar[nanobind.nb_method] = ...
    volume_per_image: ClassVar[nanobind.nb_method] = ...
    find_nearest_image: ClassVar[nanobind.nb_method] = ...
    find_nearest_pbc_image: ClassVar[nanobind.nb_method] = ...
    find_nearest_pbc_position: ClassVar[nanobind.nb_method] = ...
    is_special_position: ClassVar[nanobind.nb_method] = ...
    calculate_1_d2: ClassVar[nanobind.nb_method] = ...
    calculate_1_d2_array: ClassVar[nanobind.nb_method] = ...
    calculate_d: ClassVar[nanobind.nb_method] = ...
    calculate_d_array: ClassVar[nanobind.nb_method] = ...
    metric_tensor: ClassVar[nanobind.nb_method] = ...
    reciprocal_metric_tensor: ClassVar[nanobind.nb_method] = ...
    reciprocal: ClassVar[nanobind.nb_method] = ...
    get_hkl_limits: ClassVar[nanobind.nb_method] = ...
    primitive_orth_matrix: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    @property
    def a(self): ...
    @property
    def b(self): ...
    @property
    def c(self): ...
    @property
    def alpha(self): ...
    @property
    def beta(self): ...
    @property
    def gamma(self): ...
    @property
    def volume(self): ...
    @property
    def explicit_matrices(self): ...
    @property
    def images(self): ...
    @property
    def parameters(self): ...
    @property
    def frac(self): ...
    @property
    def orth(self): ...

class SellingVector:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    cell_parameters: ClassVar[nanobind.nb_method] = ...
    get_cell: ClassVar[nanobind.nb_method] = ...
    sum_b_squared: ClassVar[nanobind.nb_method] = ...
    gruber: ClassVar[nanobind.nb_method] = ...
    is_reduced: ClassVar[nanobind.nb_method] = ...
    reduce_step: ClassVar[nanobind.nb_method] = ...
    reduce: ClassVar[nanobind.nb_method] = ...
    sort: ClassVar[nanobind.nb_method] = ...
    @property
    def parameters(self): ...

class GruberVector:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    cell_parameters: ClassVar[nanobind.nb_method] = ...
    get_cell: ClassVar[nanobind.nb_method] = ...
    selling: ClassVar[nanobind.nb_method] = ...
    is_normalized: ClassVar[nanobind.nb_method] = ...
    is_buerger: ClassVar[nanobind.nb_method] = ...
    normalize: ClassVar[nanobind.nb_method] = ...
    buerger_reduce: ClassVar[nanobind.nb_method] = ...
    niggli_step: ClassVar[nanobind.nb_method] = ...
    niggli_reduce: ClassVar[nanobind.nb_method] = ...
    is_niggli: ClassVar[nanobind.nb_method] = ...
    @property
    def parameters(self): ...
    @property
    def change_of_basis(self): ...
find_lattice_2fold_ops: nanobind.nb_func
find_lattice_symmetry_r: nanobind.nb_func
find_lattice_symmetry: nanobind.nb_func
find_twin_laws: nanobind.nb_func

class IT92Coef:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    get_coefs: ClassVar[nanobind.nb_method] = ...
    set_coefs: ClassVar[nanobind.nb_method] = ...
    calculate_sf: ClassVar[nanobind.nb_method] = ...
    calculate_density_iso: ClassVar[nanobind.nb_method] = ...
    @property
    def a(self): ...
    @property
    def b(self): ...
    @property
    def c(self): ...
IT92_normalize: nanobind.nb_func
IT92_get_ignore_charge: nanobind.nb_func
IT92_set_ignore_charge: nanobind.nb_func

class C4322Coef:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    get_coefs: ClassVar[nanobind.nb_method] = ...
    set_coefs: ClassVar[nanobind.nb_method] = ...
    calculate_sf: ClassVar[nanobind.nb_method] = ...
    calculate_density_iso: ClassVar[nanobind.nb_method] = ...
    @property
    def a(self): ...
    @property
    def b(self): ...

class Neutron92:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    get_coefs: ClassVar[nanobind.nb_method] = ...
    calculate_sf: ClassVar[nanobind.nb_method] = ...
    calculate_density_iso: ClassVar[nanobind.nb_method] = ...

class Element:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __hash__: ClassVar[nanobind.nb_method] = ...
    @property
    def name(self): ...
    @property
    def weight(self): ...
    @property
    def covalent_r(self): ...
    @property
    def vdw_r(self): ...
    @property
    def atomic_number(self): ...
    @property
    def is_hydrogen(self): ...
    @property
    def is_metal(self): ...
    @property
    def it92(self): ...
    @property
    def c4322(self): ...
    @property
    def neutron92(self): ...
IT92_get_exact: nanobind.nb_func
set_is_metal: nanobind.nb_func

class ResidueKind(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    UNKNOWN: ClassVar[ResidueKind] = ...
    AA: ClassVar[ResidueKind] = ...
    AAD: ClassVar[ResidueKind] = ...
    PAA: ClassVar[ResidueKind] = ...
    MAA: ClassVar[ResidueKind] = ...
    RNA: ClassVar[ResidueKind] = ...
    DNA: ClassVar[ResidueKind] = ...
    BUF: ClassVar[ResidueKind] = ...
    HOH: ClassVar[ResidueKind] = ...
    PYR: ClassVar[ResidueKind] = ...
    KET: ClassVar[ResidueKind] = ...
    ELS: ClassVar[ResidueKind] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class ResidueInfo:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    found: ClassVar[nanobind.nb_method] = ...
    is_standard: ClassVar[nanobind.nb_method] = ...
    fasta_code: ClassVar[nanobind.nb_method] = ...
    is_water: ClassVar[nanobind.nb_method] = ...
    is_nucleic_acid: ClassVar[nanobind.nb_method] = ...
    is_amino_acid: ClassVar[nanobind.nb_method] = ...
    @property
    def kind(self): ...
    @property
    def one_letter_code(self): ...
    @property
    def hydrogen_count(self): ...
    @property
    def weight(self): ...
find_tabulated_residue: nanobind.nb_func
expand_one_letter: nanobind.nb_func
expand_one_letter_sequence: nanobind.nb_func

class XdsAscii:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    filtered: ClassVar[nanobind.nb_method] = ...
    apply_polarization_correction: ClassVar[nanobind.nb_method] = ...
    to_mtz: ClassVar[nanobind.nb_method] = ...
    @property
    def source_path(self): ...
    @property
    def read_columns(self): ...
    @property
    def spacegroup_number(self): ...
    @property
    def wavelength(self): ...
    @property
    def cell_constants(self): ...
    @property
    def rotation_axis(self): ...
    @property
    def friedels_law(self): ...
    @property
    def generated_by(self): ...
    @property
    def data_size(self): ...
    @property
    def miller_array(self): ...
    @property
    def iset_array(self): ...
    @property
    def iobs_array(self): ...
    @property
    def sigma_array(self): ...
    @property
    def xd_array(self): ...
    @property
    def yd_array(self): ...
    @property
    def zd_array(self): ...
read_xds_ascii: nanobind.nb_func

class SeqId:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __lt__: ClassVar[nanobind.nb_method] = ...
    __hash__: ClassVar[nanobind.nb_method] = ...
    num: Incomplete
    icode: Incomplete

class ResidueId:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    seqid: Incomplete
    segment: Incomplete

class AtomAddress:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    chain_name: Incomplete
    res_id: Incomplete
    atom_name: Incomplete
    altloc: Incomplete

class NcsOp:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    apply: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    given: Incomplete
    @property
    def tr(self): ...

class NcsOpList:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class EntityType(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Unknown: ClassVar[EntityType] = ...
    Polymer: ClassVar[EntityType] = ...
    NonPolymer: ClassVar[EntityType] = ...
    Branched: ClassVar[EntityType] = ...
    Water: ClassVar[EntityType] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class PolymerType(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    PeptideL: ClassVar[PolymerType] = ...
    PeptideD: ClassVar[PolymerType] = ...
    Dna: ClassVar[PolymerType] = ...
    Rna: ClassVar[PolymerType] = ...
    DnaRnaHybrid: ClassVar[PolymerType] = ...
    SaccharideD: ClassVar[PolymerType] = ...
    SaccharideL: ClassVar[PolymerType] = ...
    Pna: ClassVar[PolymerType] = ...
    CyclicPseudoPeptide: ClassVar[PolymerType] = ...
    Other: ClassVar[PolymerType] = ...
    Unknown: ClassVar[PolymerType] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class Entity:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    first_mon: ClassVar[nanobind.nb_func] = ...
    name: Incomplete
    subchains: Incomplete
    entity_type: Incomplete
    polymer_type: Incomplete
    sifts_unp_acc: Incomplete
    full_sequence: Incomplete

class EntityList:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class ConnectionType(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Covale: ClassVar[ConnectionType] = ...
    Disulf: ClassVar[ConnectionType] = ...
    Hydrog: ClassVar[ConnectionType] = ...
    MetalC: ClassVar[ConnectionType] = ...
    Unknown: ClassVar[ConnectionType] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class Connection:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    link_id: Incomplete
    type: Incomplete
    asu: Incomplete
    partner1: Incomplete
    partner2: Incomplete
    reported_distance: Incomplete

class ConnectionList:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class CisPep:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    partner_c: Incomplete
    partner_n: Incomplete
    model_num: Incomplete
    only_altloc: Incomplete
    reported_angle: Incomplete

class ModRes:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    chain_name: Incomplete
    res_id: Incomplete
    parent_comp_id: Incomplete
    mod_id: Incomplete
    details: Incomplete

class Helix:
    class HelixClass(enum.Enum):
        _new_member_: ClassVar[builtin_function_or_method] = ...
        _use_args_: ClassVar[bool] = ...
        _member_names_: ClassVar[list] = ...
        _member_map_: ClassVar[dict] = ...
        _value2member_map_: ClassVar[dict] = ...
        _hashable_values_: ClassVar[list] = ...
        _unhashable_values_: ClassVar[list] = ...
        _unhashable_values_map_: ClassVar[dict] = ...
        _member_type_: ClassVar[type[object]] = ...
        _value_repr_: ClassVar[None] = ...
        __nb_enum__: ClassVar[PyCapsule] = ...
        UnknownHelix: ClassVar[Helix.HelixClass] = ...
        RAlpha: ClassVar[Helix.HelixClass] = ...
        ROmega: ClassVar[Helix.HelixClass] = ...
        RPi: ClassVar[Helix.HelixClass] = ...
        RGamma: ClassVar[Helix.HelixClass] = ...
        R310: ClassVar[Helix.HelixClass] = ...
        LAlpha: ClassVar[Helix.HelixClass] = ...
        LOmega: ClassVar[Helix.HelixClass] = ...
        LGamma: ClassVar[Helix.HelixClass] = ...
        Helix27: ClassVar[Helix.HelixClass] = ...
        HelixPolyProlineNone: ClassVar[Helix.HelixClass] = ...
        @classmethod
        def __init__(cls, value) -> None: ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    start: Incomplete
    end: Incomplete
    pdb_helix_class: Incomplete
    length: Incomplete

class HelixList:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class Sheet:
    class Strand:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        start: Incomplete
        end: Incomplete
        hbond_atom2: Incomplete
        hbond_atom1: Incomplete
        sense: Incomplete
        name: Incomplete

    class StrandList:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __bool__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
        __getitem__: ClassVar[nanobind.nb_method] = ...
        clear: ClassVar[nanobind.nb_method] = ...
        append: ClassVar[nanobind.nb_method] = ...
        insert: ClassVar[nanobind.nb_method] = ...
        pop: ClassVar[nanobind.nb_method] = ...
        extend: ClassVar[nanobind.nb_method] = ...
        __setitem__: ClassVar[nanobind.nb_method] = ...
        __delitem__: ClassVar[nanobind.nb_method] = ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    strands: Incomplete

class SheetList:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class Assembly:
    class Operator:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        name: Incomplete
        type: Incomplete
        transform: Incomplete

    class OperatorList:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __bool__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
        __getitem__: ClassVar[nanobind.nb_method] = ...
        clear: ClassVar[nanobind.nb_method] = ...
        append: ClassVar[nanobind.nb_method] = ...
        insert: ClassVar[nanobind.nb_method] = ...
        pop: ClassVar[nanobind.nb_method] = ...
        extend: ClassVar[nanobind.nb_method] = ...
        __setitem__: ClassVar[nanobind.nb_method] = ...
        __delitem__: ClassVar[nanobind.nb_method] = ...

    class Gen:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        chains: Incomplete
        subchains: Incomplete
        @property
        def operators(self): ...

    class GenList:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __bool__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
        __getitem__: ClassVar[nanobind.nb_method] = ...
        clear: ClassVar[nanobind.nb_method] = ...
        append: ClassVar[nanobind.nb_method] = ...
        insert: ClassVar[nanobind.nb_method] = ...
        pop: ClassVar[nanobind.nb_method] = ...
        extend: ClassVar[nanobind.nb_method] = ...
        __setitem__: ClassVar[nanobind.nb_method] = ...
        __delitem__: ClassVar[nanobind.nb_method] = ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    author_determined: Incomplete
    software_determined: Incomplete
    oligomeric_details: Incomplete
    special_kind: Incomplete
    @property
    def generators(self): ...

class AssemblySpecialKind(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    NA: ClassVar[AssemblySpecialKind] = ...
    CompleteIcosahedral: ClassVar[AssemblySpecialKind] = ...
    RepresentativeHelical: ClassVar[AssemblySpecialKind] = ...
    CompletePoint: ClassVar[AssemblySpecialKind] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class AssemblyList:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class SoftwareItem:
    class Classification(enum.Enum):
        _new_member_: ClassVar[builtin_function_or_method] = ...
        _use_args_: ClassVar[bool] = ...
        _member_names_: ClassVar[list] = ...
        _member_map_: ClassVar[dict] = ...
        _value2member_map_: ClassVar[dict] = ...
        _hashable_values_: ClassVar[list] = ...
        _unhashable_values_: ClassVar[list] = ...
        _unhashable_values_map_: ClassVar[dict] = ...
        _member_type_: ClassVar[type[object]] = ...
        _value_repr_: ClassVar[None] = ...
        __nb_enum__: ClassVar[PyCapsule] = ...
        DataCollection: ClassVar[SoftwareItem.Classification] = ...
        DataExtraction: ClassVar[SoftwareItem.Classification] = ...
        DataProcessing: ClassVar[SoftwareItem.Classification] = ...
        DataReduction: ClassVar[SoftwareItem.Classification] = ...
        DataScaling: ClassVar[SoftwareItem.Classification] = ...
        ModelBuilding: ClassVar[SoftwareItem.Classification] = ...
        Phasing: ClassVar[SoftwareItem.Classification] = ...
        Refinement: ClassVar[SoftwareItem.Classification] = ...
        Unspecified: ClassVar[SoftwareItem.Classification] = ...
        @classmethod
        def __init__(cls, value) -> None: ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    version: Incomplete
    date: Incomplete
    classification: Incomplete
    contact_author: Incomplete
    contact_author_email: Incomplete

class ReflectionsInfo:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    resolution_high: Incomplete
    resolution_low: Incomplete
    completeness: Incomplete
    redundancy: Incomplete
    r_merge: Incomplete
    r_sym: Incomplete
    mean_I_over_sigma: Incomplete

class ExperimentInfo:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    method: Incomplete
    number_of_crystals: Incomplete
    unique_reflections: Incomplete
    reflections: Incomplete
    b_wilson: Incomplete
    shells: Incomplete
    diffraction_ids: Incomplete

class DiffractionInfo:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    temperature: Incomplete
    source: Incomplete
    source_type: Incomplete
    synchrotron: Incomplete
    beamline: Incomplete
    wavelengths: Incomplete
    scattering_type: Incomplete
    mono_or_laue: Incomplete
    monochromator: Incomplete
    collection_date: Incomplete
    optics: Incomplete
    detector: Incomplete
    detector_make: Incomplete

class CrystalInfo:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    description: Incomplete
    ph: Incomplete
    ph_range: Incomplete
    diffractions: Incomplete

class TlsGroup:
    class Selection:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        chain: Incomplete
        res_begin: Incomplete
        res_end: Incomplete
        details: Incomplete
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    selections: Incomplete
    origin: Incomplete
    T: Incomplete
    L: Incomplete
    S: Incomplete

class BasicRefinementInfo:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    resolution_high: Incomplete
    resolution_low: Incomplete
    completeness: Incomplete
    reflection_count: Incomplete
    work_set_count: Incomplete
    rfree_set_count: Incomplete
    r_all: Incomplete
    r_work: Incomplete
    r_free: Incomplete
    cc_fo_fc_work: Incomplete
    cc_fo_fc_free: Incomplete
    fsc_work: Incomplete
    fsc_free: Incomplete
    cc_intensity_work: Incomplete
    cc_intensity_free: Incomplete

class RefinementInfo(BasicRefinementInfo):
    class Restr:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        name: Incomplete
        count: Incomplete
        weight: Incomplete
        function: Incomplete
        dev_ideal: Incomplete
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    cross_validation_method: Incomplete
    rfree_selection_method: Incomplete
    bin_count: Incomplete
    bins: Incomplete
    mean_b: Incomplete
    aniso_b: Incomplete
    luzzati_error: Incomplete
    dpi_blow_r: Incomplete
    dpi_blow_rfree: Incomplete
    dpi_cruickshank_r: Incomplete
    dpi_cruickshank_rfree: Incomplete
    restr_stats: Incomplete
    tls_groups: Incomplete
    remarks: Incomplete

class Metadata:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    authors: Incomplete
    experiments: Incomplete
    crystals: Incomplete
    refinement: Incomplete
    software: Incomplete
    solved_by: Incomplete
    starting_model: Incomplete
    remark_300_detail: Incomplete

class Atom:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    is_hydrogen: ClassVar[nanobind.nb_method] = ...
    has_altloc: ClassVar[nanobind.nb_method] = ...
    b_eq: ClassVar[nanobind.nb_method] = ...
    padded_name: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    altloc: Incomplete
    charge: Incomplete
    element: Incomplete
    pos: Incomplete
    occ: Incomplete
    b_iso: Incomplete
    aniso: Incomplete
    serial: Incomplete
    fraction: Incomplete
    calc_flag: Incomplete
    flag: Incomplete
    tls_group_id: Incomplete

class Residue(ResidueId):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    find_atom: ClassVar[nanobind.nb_method] = ...
    remove_atom: ClassVar[nanobind.nb_method] = ...
    add_atom: ClassVar[nanobind.nb_method] = ...
    first_conformer: ClassVar[nanobind.nb_method] = ...
    sole_atom: ClassVar[nanobind.nb_method] = ...
    get_ca: ClassVar[nanobind.nb_method] = ...
    get_p: ClassVar[nanobind.nb_method] = ...
    is_water: ClassVar[nanobind.nb_method] = ...
    remove_hydrogens: ClassVar[nanobind.nb_method] = ...
    trim_to_alanine: ClassVar[nanobind.nb_method] = ...
    recommended_het_flag: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    subchain: Incomplete
    entity_id: Incomplete
    label_seq: Incomplete
    entity_type: Incomplete
    het_flag: Incomplete
    flag: Incomplete
    @property
    def sifts_unp(self): ...

class Chain:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    add_residue: ClassVar[nanobind.nb_method] = ...
    subchains: ClassVar[nanobind.nb_method] = ...
    whole: ClassVar[nanobind.nb_method] = ...
    get_polymer: ClassVar[nanobind.nb_method] = ...
    get_ligands: ClassVar[nanobind.nb_method] = ...
    get_waters: ClassVar[nanobind.nb_method] = ...
    get_subchain: ClassVar[nanobind.nb_method] = ...
    previous_residue: ClassVar[nanobind.nb_method] = ...
    next_residue: ClassVar[nanobind.nb_method] = ...
    append_residues: ClassVar[nanobind.nb_method] = ...
    count_atom_sites: ClassVar[nanobind.nb_method] = ...
    count_occupancies: ClassVar[nanobind.nb_method] = ...
    calculate_mass: ClassVar[nanobind.nb_method] = ...
    calculate_center_of_mass: ClassVar[nanobind.nb_method] = ...
    trim_to_alanine: ClassVar[nanobind.nb_method] = ...
    first_conformer: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    name: Incomplete

class Model:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    all: ClassVar[nanobind.nb_method] = ...
    get_subchain: ClassVar[nanobind.nb_method] = ...
    subchains: ClassVar[nanobind.nb_method] = ...
    find_residue_group: ClassVar[nanobind.nb_method] = ...
    sole_residue: ClassVar[nanobind.nb_method] = ...
    get_all_residue_names: ClassVar[nanobind.nb_method] = ...
    find_cra: ClassVar[nanobind.nb_method] = ...
    find_chain: ClassVar[nanobind.nb_method] = ...
    find_last_chain: ClassVar[nanobind.nb_method] = ...
    add_chain: ClassVar[nanobind.nb_method] = ...
    remove_chain: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    remove_alternative_conformations: ClassVar[nanobind.nb_method] = ...
    remove_hydrogens: ClassVar[nanobind.nb_method] = ...
    remove_waters: ClassVar[nanobind.nb_method] = ...
    remove_ligands_and_waters: ClassVar[nanobind.nb_method] = ...
    has_hydrogen: ClassVar[nanobind.nb_method] = ...
    count_atom_sites: ClassVar[nanobind.nb_method] = ...
    count_occupancies: ClassVar[nanobind.nb_method] = ...
    calculate_mass: ClassVar[nanobind.nb_method] = ...
    calculate_center_of_mass: ClassVar[nanobind.nb_method] = ...
    calculate_b_iso_range: ClassVar[nanobind.nb_method] = ...
    calculate_b_aniso_range: ClassVar[nanobind.nb_method] = ...
    transform_pos_and_adp: ClassVar[nanobind.nb_method] = ...
    split_chains_by_segments: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    num: Incomplete

class ResidueSpan:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    add_residue: ClassVar[nanobind.nb_method] = ...
    first_conformer: ClassVar[nanobind.nb_method] = ...
    residue_groups: ClassVar[nanobind.nb_method] = ...
    length: ClassVar[nanobind.nb_method] = ...
    subchain_id: ClassVar[nanobind.nb_method] = ...
    extract_sequence: ClassVar[nanobind.nb_method] = ...
    label_seq_id_to_auth: ClassVar[nanobind.nb_method] = ...
    auth_seq_id_to_label: ClassVar[nanobind.nb_method] = ...
    check_polymer_type: ClassVar[nanobind.nb_method] = ...
    make_one_letter_sequence: ClassVar[nanobind.nb_method] = ...
    transform_pos_and_adp: ClassVar[nanobind.nb_method] = ...

class ResidueGroup(ResidueSpan):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class Selection:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    models: ClassVar[nanobind.nb_method] = ...
    chains: ClassVar[nanobind.nb_method] = ...
    residues: ClassVar[nanobind.nb_method] = ...
    atoms: ClassVar[nanobind.nb_method] = ...
    first_in_model: ClassVar[nanobind.nb_method] = ...
    first: ClassVar[nanobind.nb_method] = ...
    set_residue_flags: ClassVar[nanobind.nb_method] = ...
    set_atom_flags: ClassVar[nanobind.nb_method] = ...
    copy_model_selection: ClassVar[nanobind.nb_method] = ...
    copy_structure_selection: ClassVar[nanobind.nb_method] = ...
    remove_selected: ClassVar[nanobind.nb_method] = ...
    remove_not_selected: ClassVar[nanobind.nb_method] = ...
    str: ClassVar[nanobind.nb_method] = ...

class HowToNameCopiedChain(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Short: ClassVar[HowToNameCopiedChain] = ...
    AddNumber: ClassVar[HowToNameCopiedChain] = ...
    Dup: ClassVar[HowToNameCopiedChain] = ...
    @classmethod
    def __init__(cls, value) -> None: ...
make_address: nanobind.nb_func

class CoorFormat(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Unknown: ClassVar[CoorFormat] = ...
    Detect: ClassVar[CoorFormat] = ...
    Pdb: ClassVar[CoorFormat] = ...
    Mmcif: ClassVar[CoorFormat] = ...
    Mmjson: ClassVar[CoorFormat] = ...
    ChemComp: ClassVar[CoorFormat] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class InfoMap:
    class ItemView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class KeyView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __contains__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class ValueView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    update: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __ne__: ClassVar[nanobind.nb_method] = ...
    keys: ClassVar[nanobind.nb_method] = ...
    values: ClassVar[nanobind.nb_method] = ...
    items: ClassVar[nanobind.nb_method] = ...

class CRA:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    atom_matches: ClassVar[nanobind.nb_method] = ...
    @property
    def chain(self): ...
    @property
    def residue(self): ...
    @property
    def atom(self): ...

class CraGenerator:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class Structure:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    find_spacegroup: ClassVar[nanobind.nb_method] = ...
    get_entity: ClassVar[nanobind.nb_method] = ...
    get_entity_of: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    find_connection_by_cra: ClassVar[nanobind.nb_method] = ...
    find_connection: ClassVar[nanobind.nb_method] = ...
    find_or_add_model: ClassVar[nanobind.nb_method] = ...
    add_model: ClassVar[nanobind.nb_method] = ...
    renumber_models: ClassVar[nanobind.nb_method] = ...
    merge_chain_parts: ClassVar[nanobind.nb_method] = ...
    remove_empty_chains: ClassVar[nanobind.nb_method] = ...
    setup_cell_images: ClassVar[nanobind.nb_method] = ...
    add_entity_types: ClassVar[nanobind.nb_method] = ...
    add_entity_ids: ClassVar[nanobind.nb_method] = ...
    add_conect: ClassVar[nanobind.nb_method] = ...
    clear_conect: ClassVar[nanobind.nb_method] = ...
    assign_subchains: ClassVar[nanobind.nb_method] = ...
    ensure_entities: ClassVar[nanobind.nb_method] = ...
    deduplicate_entities: ClassVar[nanobind.nb_method] = ...
    setup_entities: ClassVar[nanobind.nb_method] = ...
    assign_het_flags: ClassVar[nanobind.nb_method] = ...
    remove_waters: ClassVar[nanobind.nb_method] = ...
    remove_ligands_and_waters: ClassVar[nanobind.nb_method] = ...
    shorten_ccd_codes: ClassVar[nanobind.nb_method] = ...
    restore_full_ccd_codes: ClassVar[nanobind.nb_method] = ...
    remove_alternative_conformations: ClassVar[nanobind.nb_method] = ...
    remove_hydrogens: ClassVar[nanobind.nb_method] = ...
    store_deuterium_as_fraction: ClassVar[nanobind.nb_method] = ...
    standardize_crystal_frame: ClassVar[nanobind.nb_method] = ...
    assign_serial_numbers: ClassVar[nanobind.nb_method] = ...
    rename_chain: ClassVar[nanobind.nb_method] = ...
    rename_residues: ClassVar[nanobind.nb_method] = ...
    shorten_chain_names: ClassVar[nanobind.nb_method] = ...
    expand_ncs: ClassVar[nanobind.nb_method] = ...
    transform_to_assembly: ClassVar[nanobind.nb_method] = ...
    calculate_box: ClassVar[nanobind.nb_method] = ...
    calculate_fractional_box: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    assign_label_seq_id: ClassVar[nanobind.nb_method] = ...
    clear_sequences: ClassVar[nanobind.nb_method] = ...
    assign_best_sequences: ClassVar[nanobind.nb_method] = ...
    make_pdb_string: ClassVar[nanobind.nb_method] = ...
    write_pdb: ClassVar[nanobind.nb_method] = ...
    make_pdb_headers: ClassVar[nanobind.nb_method] = ...
    write_minimal_pdb: ClassVar[nanobind.nb_method] = ...
    make_minimal_pdb: ClassVar[nanobind.nb_method] = ...
    make_mmcif_document: ClassVar[nanobind.nb_method] = ...
    make_mmcif_block: ClassVar[nanobind.nb_method] = ...
    update_mmcif_block: ClassVar[nanobind.nb_method] = ...
    make_mmcif_headers: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    cell: Incomplete
    spacegroup_hm: Incomplete
    ncs: Incomplete
    resolution: Incomplete
    input_format: Incomplete
    entities: Incomplete
    connections: Incomplete
    cispeps: Incomplete
    mod_residues: Incomplete
    helices: Incomplete
    sheets: Incomplete
    assemblies: Incomplete
    meta: Incomplete
    has_d_fraction: Incomplete
    has_origx: Incomplete
    info: Incomplete
    raw_remarks: Incomplete
    shortened_ccd_codes: Incomplete
    @property
    def origx(self): ...
    @property
    def conect_map(self): ...

class MmcifOutputGroups:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    atoms: Incomplete
    block_name: Incomplete
    entry: Incomplete
    database_status: Incomplete
    author: Incomplete
    cell: Incomplete
    symmetry: Incomplete
    entity: Incomplete
    entity_poly: Incomplete
    struct_ref: Incomplete
    chem_comp: Incomplete
    exptl: Incomplete
    diffrn: Incomplete
    reflns: Incomplete
    refine: Incomplete
    title_keywords: Incomplete
    ncs: Incomplete
    struct_asym: Incomplete
    origx: Incomplete
    struct_conf: Incomplete
    struct_sheet: Incomplete
    struct_biol: Incomplete
    assembly: Incomplete
    conn: Incomplete
    cis: Incomplete
    scale: Incomplete
    atom_type: Incomplete
    entity_poly_seq: Incomplete
    tls: Incomplete
    software: Incomplete
    group_pdb: Incomplete
    auth_all: Incomplete

class PdbWriteOptions:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    minimal_file: Incomplete
    atom_records: Incomplete
    seqres_records: Incomplete
    ssbond_records: Incomplete
    link_records: Incomplete
    cispep_records: Incomplete
    cryst1_record: Incomplete
    ter_records: Incomplete
    conect_records: Incomplete
    end_record: Incomplete
    numbered_ter: Incomplete
    ter_ignores_type: Incomplete
    use_linkr: Incomplete
    preserve_serial: Incomplete

class FirstConformerRes:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class FirstConformerResSpan:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class FirstConformerAtoms:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class ResidueSpanGroups:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class AtomGroup:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    name: ClassVar[nanobind.nb_method] = ...

class CalcFlag(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    NotSet: ClassVar[CalcFlag] = ...
    NoHydrogen: ClassVar[CalcFlag] = ...
    Determined: ClassVar[CalcFlag] = ...
    Calculated: ClassVar[CalcFlag] = ...
    Dummy: ClassVar[CalcFlag] = ...
    @classmethod
    def __init__(cls, value) -> None: ...
calculate_b_est: nanobind.nb_func
calculate_angle: nanobind.nb_func
calculate_dihedral: nanobind.nb_func
calculate_omega: nanobind.nb_func
calculate_phi_psi: nanobind.nb_func
find_best_plane: nanobind.nb_func
get_distance_from_plane: nanobind.nb_func
parse_triplet_as_ftransform: nanobind.nb_func
calculate_u_from_tls: nanobind.nb_func
make_assembly: nanobind.nb_func
expand_ncs_model: nanobind.nb_func
merge_atoms_in_expanded_model: nanobind.nb_func

class SelectionModelsProxy:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class SelectionChainsProxy:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class SelectionResiduesProxy:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class SelectionAtomsProxy:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class SmallStructure:
    class Site:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        orth: ClassVar[nanobind.nb_method] = ...
        clone: ClassVar[nanobind.nb_method] = ...
        label: Incomplete
        type_symbol: Incomplete
        fract: Incomplete
        occ: Incomplete
        u_iso: Incomplete
        element: Incomplete
        charge: Incomplete
        disorder_group: Incomplete
        aniso: Incomplete

    class SiteList:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __bool__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
        __getitem__: ClassVar[nanobind.nb_method] = ...
        clear: ClassVar[nanobind.nb_method] = ...
        append: ClassVar[nanobind.nb_method] = ...
        insert: ClassVar[nanobind.nb_method] = ...
        pop: ClassVar[nanobind.nb_method] = ...
        extend: ClassVar[nanobind.nb_method] = ...
        __setitem__: ClassVar[nanobind.nb_method] = ...
        __delitem__: ClassVar[nanobind.nb_method] = ...

    class AtomType:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        dispersion_real: Incomplete
        dispersion_imag: Incomplete
        @property
        def symbol(self): ...
        @property
        def element(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    add_site: ClassVar[nanobind.nb_method] = ...
    determine_and_set_spacegroup: ClassVar[nanobind.nb_method] = ...
    check_spacegroup: ClassVar[nanobind.nb_method] = ...
    get_atom_type: ClassVar[nanobind.nb_method] = ...
    get_all_unit_cell_sites: ClassVar[nanobind.nb_method] = ...
    remove_hydrogens: ClassVar[nanobind.nb_method] = ...
    change_occupancies_to_crystallographic: ClassVar[nanobind.nb_method] = ...
    make_cif_block: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    cell: Incomplete
    spacegroup_hm: Incomplete
    spacegroup_hall: Incomplete
    spacegroup_number: Incomplete
    symops: Incomplete
    sites: Incomplete
    wavelength: Incomplete
    @property
    def spacegroup(self): ...
    @property
    def atom_types(self): ...
mx_to_sx_structure: nanobind.nb_func

class CifWalk:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...

class CoorFileWalk:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
is_pdb_code: nanobind.nb_func
expand_pdb_code_to_path: nanobind.nb_func
expand_if_pdb_code: nanobind.nb_func
hc: float
bessel_i1_over_i0: nanobind.nb_func
log_bessel_i0: nanobind.nb_func
log_cosh: nanobind.nb_func

class FastaSeq:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    @property
    def header(self): ...
    @property
    def seq(self): ...
read_pir_or_fasta: nanobind.nb_func
calculate_sequence_weight: nanobind.nb_func
one_letter_code: nanobind.nb_func
pdbx_one_letter_code: nanobind.nb_func
sequence_kind: nanobind.nb_func

class Correlation:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    coefficient: ClassVar[nanobind.nb_method] = ...
    mean_ratio: ClassVar[nanobind.nb_method] = ...
    @property
    def n(self): ...
binmean: nanobind.nb_func
binrfactor: nanobind.nb_func
bincorr: nanobind.nb_func

class AxisOrder(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Unknown: ClassVar[AxisOrder] = ...
    XYZ: ClassVar[AxisOrder] = ...
    ZYX: ClassVar[AxisOrder] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class GridSizeRounding(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Nearest: ClassVar[GridSizeRounding] = ...
    Up: ClassVar[GridSizeRounding] = ...
    Down: ClassVar[GridSizeRounding] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class GridMeta:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    get_position: ClassVar[nanobind.nb_method] = ...
    get_fractional: ClassVar[nanobind.nb_method] = ...
    spacegroup: Incomplete
    unit_cell: Incomplete
    @property
    def nu(self): ...
    @property
    def nv(self): ...
    @property
    def nw(self): ...
    @property
    def axis_order(self): ...
    @property
    def point_count(self): ...
    @property
    def shape(self): ...

class Int8GridBase(GridMeta):
    class Point:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        value: Incomplete
        @property
        def u(self): ...
        @property
        def v(self): ...
        @property
        def w(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __array__: ClassVar[nanobind.nb_method] = ...
    point_to_index: ClassVar[nanobind.nb_method] = ...
    index_to_point: ClassVar[nanobind.nb_method] = ...
    fill: ClassVar[nanobind.nb_method] = ...
    sum: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    get_nonzero_extent: ClassVar[nanobind.nb_method] = ...
    @property
    def array(self): ...

class Int8Grid(Int8GridBase):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set_size: ClassVar[nanobind.nb_method] = ...
    set_size_from_spacing: ClassVar[nanobind.nb_method] = ...
    get_value: ClassVar[nanobind.nb_method] = ...
    set_value: ClassVar[nanobind.nb_method] = ...
    get_point: ClassVar[nanobind.nb_method] = ...
    get_nearest_point: ClassVar[nanobind.nb_method] = ...
    point_to_fractional: ClassVar[nanobind.nb_method] = ...
    point_to_position: ClassVar[nanobind.nb_method] = ...
    change_values: ClassVar[nanobind.nb_method] = ...
    copy_metadata_from: ClassVar[nanobind.nb_method] = ...
    setup_from: ClassVar[nanobind.nb_method] = ...
    set_unit_cell: ClassVar[nanobind.nb_method] = ...
    set_points_around: ClassVar[nanobind.nb_method] = ...
    symmetrize_min: ClassVar[nanobind.nb_method] = ...
    symmetrize_max: ClassVar[nanobind.nb_method] = ...
    symmetrize_abs_max: ClassVar[nanobind.nb_method] = ...
    symmetrize_sum: ClassVar[nanobind.nb_method] = ...
    masked_asu: ClassVar[nanobind.nb_method] = ...
    mask_points_in_constant_radius: ClassVar[nanobind.nb_method] = ...
    get_subarray: ClassVar[nanobind.nb_method] = ...
    set_subarray: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    @property
    def spacing(self): ...

class MaskedInt8Grid:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    @property
    def grid(self): ...
    @property
    def mask_array(self): ...

class FloatGridBase(GridMeta):
    class Point:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        value: Incomplete
        @property
        def u(self): ...
        @property
        def v(self): ...
        @property
        def w(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __array__: ClassVar[nanobind.nb_method] = ...
    point_to_index: ClassVar[nanobind.nb_method] = ...
    index_to_point: ClassVar[nanobind.nb_method] = ...
    fill: ClassVar[nanobind.nb_method] = ...
    sum: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    calculate_correlation: ClassVar[nanobind.nb_method] = ...
    get_nonzero_extent: ClassVar[nanobind.nb_method] = ...
    @property
    def array(self): ...

class FloatGrid(FloatGridBase):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set_size: ClassVar[nanobind.nb_method] = ...
    set_size_from_spacing: ClassVar[nanobind.nb_method] = ...
    get_value: ClassVar[nanobind.nb_method] = ...
    set_value: ClassVar[nanobind.nb_method] = ...
    get_point: ClassVar[nanobind.nb_method] = ...
    get_nearest_point: ClassVar[nanobind.nb_method] = ...
    point_to_fractional: ClassVar[nanobind.nb_method] = ...
    point_to_position: ClassVar[nanobind.nb_method] = ...
    change_values: ClassVar[nanobind.nb_method] = ...
    copy_metadata_from: ClassVar[nanobind.nb_method] = ...
    setup_from: ClassVar[nanobind.nb_method] = ...
    set_unit_cell: ClassVar[nanobind.nb_method] = ...
    set_points_around: ClassVar[nanobind.nb_method] = ...
    symmetrize_min: ClassVar[nanobind.nb_method] = ...
    symmetrize_max: ClassVar[nanobind.nb_method] = ...
    symmetrize_abs_max: ClassVar[nanobind.nb_method] = ...
    symmetrize_sum: ClassVar[nanobind.nb_method] = ...
    masked_asu: ClassVar[nanobind.nb_method] = ...
    mask_points_in_constant_radius: ClassVar[nanobind.nb_method] = ...
    get_subarray: ClassVar[nanobind.nb_method] = ...
    set_subarray: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    interpolate_value: ClassVar[nanobind.nb_method] = ...
    tricubic_interpolation: ClassVar[nanobind.nb_method] = ...
    tricubic_interpolation_der: ClassVar[nanobind.nb_method] = ...
    interpolate_position_array: ClassVar[nanobind.nb_method] = ...
    interpolate_values: ClassVar[nanobind.nb_method] = ...
    symmetrize_avg: ClassVar[nanobind.nb_method] = ...
    normalize: ClassVar[nanobind.nb_method] = ...
    add_soft_edge_to_mask: ClassVar[nanobind.nb_method] = ...
    @property
    def spacing(self): ...

class MaskedFloatGrid:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    @property
    def grid(self): ...
    @property
    def mask_array(self): ...

class ComplexGridBase(GridMeta):
    class Point:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        value: Incomplete
        @property
        def u(self): ...
        @property
        def v(self): ...
        @property
        def w(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __array__: ClassVar[nanobind.nb_method] = ...
    point_to_index: ClassVar[nanobind.nb_method] = ...
    index_to_point: ClassVar[nanobind.nb_method] = ...
    fill: ClassVar[nanobind.nb_method] = ...
    sum: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    @property
    def array(self): ...

class AtomicRadiiSet(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    VanDerWaals: ClassVar[AtomicRadiiSet] = ...
    Cctbx: ClassVar[AtomicRadiiSet] = ...
    Refmac: ClassVar[AtomicRadiiSet] = ...
    Constant: ClassVar[AtomicRadiiSet] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class SolventMasker:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set_radii: ClassVar[nanobind.nb_method] = ...
    put_mask_on_int8_grid: ClassVar[nanobind.nb_method] = ...
    put_mask_on_float_grid: ClassVar[nanobind.nb_method] = ...
    set_to_zero: ClassVar[nanobind.nb_method] = ...
    atomic_radii_set: Incomplete
    rprobe: Incomplete
    rshrink: Incomplete
    island_min_volume: Incomplete
    constant_r: Incomplete
    ignore_hydrogen: Incomplete
    ignore_zero_occupancy_atoms: Incomplete
interpolate_grid: nanobind.nb_func
interpolate_grid_of_aligned_model2: nanobind.nb_func

class Blob:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    @property
    def volume(self): ...
    @property
    def score(self): ...
    @property
    def peak_value(self): ...
    @property
    def centroid(self): ...
    @property
    def peak_pos(self): ...
find_blobs_by_flood_fill: nanobind.nb_func
flood_fill_above: nanobind.nb_func

class AsuBrick:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    get_extent: ClassVar[nanobind.nb_method] = ...
    str: ClassVar[nanobind.nb_method] = ...
    @property
    def size(self): ...
    @property
    def incl(self): ...
find_asu_brick: nanobind.nb_func

class ValueSigma:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    value: Incomplete
    sigma: Incomplete

class ComplexCorrelation:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    coefficient: ClassVar[nanobind.nb_method] = ...
    mean_ratio: ClassVar[nanobind.nb_method] = ...
    @property
    def n(self): ...

class ReciprocalInt8Grid(Int8GridBase):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    get_value: ClassVar[nanobind.nb_method] = ...
    get_value_or_zero: ClassVar[nanobind.nb_method] = ...
    set_value: ClassVar[nanobind.nb_method] = ...
    to_hkl: ClassVar[nanobind.nb_method] = ...
    calculate_1_d2: ClassVar[nanobind.nb_method] = ...
    calculate_d: ClassVar[nanobind.nb_method] = ...
    get_value_by_hkl: ClassVar[nanobind.nb_method] = ...
    prepare_asu_data: ClassVar[nanobind.nb_method] = ...
    @property
    def half_l(self): ...

class IntHklValue:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    value: Incomplete
    @property
    def hkl(self): ...

class IntAsuData:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    make_1_d2_array: ClassVar[nanobind.nb_method] = ...
    make_d_array: ClassVar[nanobind.nb_method] = ...
    count_equal_values: ClassVar[nanobind.nb_method] = ...
    ensure_sorted: ClassVar[nanobind.nb_method] = ...
    ensure_asu: ClassVar[nanobind.nb_method] = ...
    copy: ClassVar[nanobind.nb_method] = ...
    spacegroup: Incomplete
    unit_cell: Incomplete
    @property
    def miller_array(self): ...
    @property
    def value_array(self): ...

class ReciprocalFloatGrid(FloatGridBase):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    get_value: ClassVar[nanobind.nb_method] = ...
    get_value_or_zero: ClassVar[nanobind.nb_method] = ...
    set_value: ClassVar[nanobind.nb_method] = ...
    to_hkl: ClassVar[nanobind.nb_method] = ...
    calculate_1_d2: ClassVar[nanobind.nb_method] = ...
    calculate_d: ClassVar[nanobind.nb_method] = ...
    get_value_by_hkl: ClassVar[nanobind.nb_method] = ...
    prepare_asu_data: ClassVar[nanobind.nb_method] = ...
    @property
    def half_l(self): ...

class FloatHklValue:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    value: Incomplete
    @property
    def hkl(self): ...

class FloatAsuData:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    make_1_d2_array: ClassVar[nanobind.nb_method] = ...
    make_d_array: ClassVar[nanobind.nb_method] = ...
    count_equal_values: ClassVar[nanobind.nb_method] = ...
    ensure_sorted: ClassVar[nanobind.nb_method] = ...
    ensure_asu: ClassVar[nanobind.nb_method] = ...
    copy: ClassVar[nanobind.nb_method] = ...
    calculate_correlation: ClassVar[nanobind.nb_method] = ...
    spacegroup: Incomplete
    unit_cell: Incomplete
    @property
    def miller_array(self): ...
    @property
    def value_array(self): ...

class ReciprocalComplexGrid(ComplexGridBase):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    get_value: ClassVar[nanobind.nb_method] = ...
    get_value_or_zero: ClassVar[nanobind.nb_method] = ...
    set_value: ClassVar[nanobind.nb_method] = ...
    to_hkl: ClassVar[nanobind.nb_method] = ...
    calculate_1_d2: ClassVar[nanobind.nb_method] = ...
    calculate_d: ClassVar[nanobind.nb_method] = ...
    get_value_by_hkl: ClassVar[nanobind.nb_method] = ...
    prepare_asu_data: ClassVar[nanobind.nb_method] = ...
    @property
    def half_l(self): ...

class ComplexHklValue:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    value: Incomplete
    @property
    def hkl(self): ...

class ComplexAsuData:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    make_1_d2_array: ClassVar[nanobind.nb_method] = ...
    make_d_array: ClassVar[nanobind.nb_method] = ...
    count_equal_values: ClassVar[nanobind.nb_method] = ...
    ensure_sorted: ClassVar[nanobind.nb_method] = ...
    ensure_asu: ClassVar[nanobind.nb_method] = ...
    copy: ClassVar[nanobind.nb_method] = ...
    get_size_for_hkl: ClassVar[nanobind.nb_method] = ...
    data_fits_into: ClassVar[nanobind.nb_method] = ...
    get_f_phi_on_grid: ClassVar[nanobind.nb_method] = ...
    transform_f_phi_to_map: ClassVar[nanobind.nb_method] = ...
    calculate_correlation: ClassVar[nanobind.nb_method] = ...
    spacegroup: Incomplete
    unit_cell: Incomplete
    @property
    def miller_array(self): ...
    @property
    def value_array(self): ...

class ValueSigmaHklValue:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    value: Incomplete
    @property
    def hkl(self): ...

class ValueSigmaAsuData:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    make_1_d2_array: ClassVar[nanobind.nb_method] = ...
    make_d_array: ClassVar[nanobind.nb_method] = ...
    count_equal_values: ClassVar[nanobind.nb_method] = ...
    ensure_sorted: ClassVar[nanobind.nb_method] = ...
    ensure_asu: ClassVar[nanobind.nb_method] = ...
    copy: ClassVar[nanobind.nb_method] = ...
    discard_by_sigma_ratio: ClassVar[nanobind.nb_method] = ...
    spacegroup: Incomplete
    unit_cell: Incomplete
    @property
    def miller_array(self): ...
    @property
    def value_array(self): ...

class MapSetup(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Full: ClassVar[MapSetup] = ...
    NoSymmetry: ClassVar[MapSetup] = ...
    ReorderOnly: ClassVar[MapSetup] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class Ccp4Base:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    header_i32: ClassVar[nanobind.nb_method] = ...
    header_float: ClassVar[nanobind.nb_method] = ...
    header_str: ClassVar[nanobind.nb_method] = ...
    set_header_i32: ClassVar[nanobind.nb_method] = ...
    set_header_float: ClassVar[nanobind.nb_method] = ...
    set_header_str: ClassVar[nanobind.nb_method] = ...
    axis_positions: ClassVar[nanobind.nb_method] = ...
    get_extent: ClassVar[nanobind.nb_method] = ...
    has_skew_transformation: ClassVar[nanobind.nb_method] = ...
    get_skew_transformation: ClassVar[nanobind.nb_method] = ...

class Ccp4Map(Ccp4Base):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    setup: ClassVar[nanobind.nb_method] = ...
    update_ccp4_header: ClassVar[nanobind.nb_method] = ...
    full_cell: ClassVar[nanobind.nb_method] = ...
    write_ccp4_map: ClassVar[nanobind.nb_method] = ...
    set_extent: ClassVar[nanobind.nb_method] = ...
    grid: Incomplete

class Ccp4Mask(Ccp4Base):
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    setup: ClassVar[nanobind.nb_method] = ...
    update_ccp4_header: ClassVar[nanobind.nb_method] = ...
    full_cell: ClassVar[nanobind.nb_method] = ...
    write_ccp4_map: ClassVar[nanobind.nb_method] = ...
    set_extent: ClassVar[nanobind.nb_method] = ...
    grid: Incomplete
read_ccp4_map: nanobind.nb_func
read_ccp4_mask: nanobind.nb_func
read_ccp4_header: nanobind.nb_func

class Addends:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    set: ClassVar[nanobind.nb_method] = ...
    get: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    add_cl_fprime: ClassVar[nanobind.nb_method] = ...
    subtract_z: ClassVar[nanobind.nb_method] = ...

class StructureFactorCalculatorX:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    calculate_sf_from_model: ClassVar[nanobind.nb_method] = ...
    calculate_sf_from_small_structure: ClassVar[nanobind.nb_method] = ...
    mott_bethe_factor: ClassVar[nanobind.nb_method] = ...
    calculate_mb_z: ClassVar[nanobind.nb_method] = ...
    addends: Incomplete

class StructureFactorCalculatorE:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    calculate_sf_from_model: ClassVar[nanobind.nb_method] = ...
    calculate_sf_from_small_structure: ClassVar[nanobind.nb_method] = ...
    addends: Incomplete

class StructureFactorCalculatorN:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    calculate_sf_from_model: ClassVar[nanobind.nb_method] = ...
    calculate_sf_from_small_structure: ClassVar[nanobind.nb_method] = ...
    addends: Incomplete

class DensityCalculatorX:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set_refmac_compatible_blur: ClassVar[nanobind.nb_method] = ...
    put_model_density_on_grid: ClassVar[nanobind.nb_method] = ...
    initialize_grid: ClassVar[nanobind.nb_method] = ...
    add_model_density_to_grid: ClassVar[nanobind.nb_method] = ...
    add_atom_density_to_grid: ClassVar[nanobind.nb_method] = ...
    add_c_contribution_to_grid: ClassVar[nanobind.nb_method] = ...
    set_grid_cell_and_spacegroup: ClassVar[nanobind.nb_method] = ...
    reciprocal_space_multiplier: ClassVar[nanobind.nb_method] = ...
    mott_bethe_factor: ClassVar[nanobind.nb_method] = ...
    estimate_radius: ClassVar[nanobind.nb_method] = ...
    d_min: Incomplete
    rate: Incomplete
    blur: Incomplete
    cutoff: Incomplete
    addends: Incomplete
    @property
    def grid(self): ...

class DensityCalculatorE:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set_refmac_compatible_blur: ClassVar[nanobind.nb_method] = ...
    put_model_density_on_grid: ClassVar[nanobind.nb_method] = ...
    initialize_grid: ClassVar[nanobind.nb_method] = ...
    add_model_density_to_grid: ClassVar[nanobind.nb_method] = ...
    add_atom_density_to_grid: ClassVar[nanobind.nb_method] = ...
    add_c_contribution_to_grid: ClassVar[nanobind.nb_method] = ...
    set_grid_cell_and_spacegroup: ClassVar[nanobind.nb_method] = ...
    reciprocal_space_multiplier: ClassVar[nanobind.nb_method] = ...
    mott_bethe_factor: ClassVar[nanobind.nb_method] = ...
    estimate_radius: ClassVar[nanobind.nb_method] = ...
    d_min: Incomplete
    rate: Incomplete
    blur: Incomplete
    cutoff: Incomplete
    addends: Incomplete
    @property
    def grid(self): ...

class DensityCalculatorN:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    set_refmac_compatible_blur: ClassVar[nanobind.nb_method] = ...
    put_model_density_on_grid: ClassVar[nanobind.nb_method] = ...
    initialize_grid: ClassVar[nanobind.nb_method] = ...
    add_model_density_to_grid: ClassVar[nanobind.nb_method] = ...
    add_atom_density_to_grid: ClassVar[nanobind.nb_method] = ...
    add_c_contribution_to_grid: ClassVar[nanobind.nb_method] = ...
    set_grid_cell_and_spacegroup: ClassVar[nanobind.nb_method] = ...
    reciprocal_space_multiplier: ClassVar[nanobind.nb_method] = ...
    mott_bethe_factor: ClassVar[nanobind.nb_method] = ...
    estimate_radius: ClassVar[nanobind.nb_method] = ...
    d_min: Incomplete
    rate: Incomplete
    blur: Incomplete
    cutoff: Incomplete
    addends: Incomplete
    @property
    def grid(self): ...
mott_bethe_const: nanobind.nb_func

class Mtz:
    class Dataset:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        id: Incomplete
        project_name: Incomplete
        crystal_name: Incomplete
        dataset_name: Incomplete
        cell: Incomplete
        wavelength: Incomplete

    class Column:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __array__: ClassVar[nanobind.nb_method] = ...
        is_integer: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __getitem__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
        dataset_id: Incomplete
        type: Incomplete
        label: Incomplete
        min_value: Incomplete
        max_value: Incomplete
        source: Incomplete
        idx: Incomplete
        @property
        def array(self): ...
        @property
        def dataset(self): ...

    class Batch:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        clone: ClassVar[nanobind.nb_method] = ...
        number: Incomplete
        title: Incomplete
        ints: Incomplete
        floats: Incomplete
        axes: Incomplete
        cell: Incomplete
        dataset_id: Incomplete
        wavelength: Incomplete
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __array__: ClassVar[nanobind.nb_method] = ...
    set_logging: ClassVar[nanobind.nb_method] = ...
    resolution_high: ClassVar[nanobind.nb_method] = ...
    resolution_low: ClassVar[nanobind.nb_method] = ...
    dataset: ClassVar[nanobind.nb_method] = ...
    count: ClassVar[nanobind.nb_method] = ...
    column_with_label: ClassVar[nanobind.nb_method] = ...
    rfree_column: ClassVar[nanobind.nb_method] = ...
    columns_with_type: ClassVar[nanobind.nb_method] = ...
    column_labels: ClassVar[nanobind.nb_method] = ...
    get_cell: ClassVar[nanobind.nb_method] = ...
    set_cell_for_all: ClassVar[nanobind.nb_method] = ...
    make_miller_array: ClassVar[nanobind.nb_method] = ...
    make_1_d2_array: ClassVar[nanobind.nb_method] = ...
    make_d_array: ClassVar[nanobind.nb_method] = ...
    get_size_for_hkl: ClassVar[nanobind.nb_method] = ...
    data_fits_into: ClassVar[nanobind.nb_method] = ...
    get_f_phi_on_grid: ClassVar[nanobind.nb_method] = ...
    get_value_on_grid: ClassVar[nanobind.nb_method] = ...
    transform_f_phi_to_map: ClassVar[nanobind.nb_method] = ...
    get_float: ClassVar[nanobind.nb_method] = ...
    get_int: ClassVar[nanobind.nb_method] = ...
    get_f_phi: ClassVar[nanobind.nb_method] = ...
    get_value_sigma: ClassVar[nanobind.nb_method] = ...
    add_dataset: ClassVar[nanobind.nb_method] = ...
    add_column: ClassVar[nanobind.nb_method] = ...
    replace_column: ClassVar[nanobind.nb_method] = ...
    copy_column: ClassVar[nanobind.nb_method] = ...
    remove_column: ClassVar[nanobind.nb_method] = ...
    set_data: ClassVar[nanobind.nb_method] = ...
    filtered: ClassVar[nanobind.nb_method] = ...
    update_reso: ClassVar[nanobind.nb_method] = ...
    sort: ClassVar[nanobind.nb_method] = ...
    ensure_asu: ClassVar[nanobind.nb_method] = ...
    switch_to_original_hkl: ClassVar[nanobind.nb_method] = ...
    switch_to_asu_hkl: ClassVar[nanobind.nb_method] = ...
    write_to_file: ClassVar[nanobind.nb_method] = ...
    reindex: ClassVar[nanobind.nb_method] = ...
    expand_to_p1: ClassVar[nanobind.nb_method] = ...
    row_as_dict: ClassVar[nanobind.nb_method] = ...
    title: Incomplete
    nreflections: Incomplete
    sort_order: Incomplete
    min_1_d2: Incomplete
    max_1_d2: Incomplete
    valm: Incomplete
    cell: Incomplete
    spacegroup: Incomplete
    datasets: Incomplete
    columns: Incomplete
    batches: Incomplete
    history: Incomplete
    appended_text: Incomplete
    @property
    def array(self): ...
    @property
    def nsymop(self): ...
    @property
    def spacegroup_name(self): ...
    @property
    def spacegroup_number(self): ...

class MtzDatasets:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class MtzColumns:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class MtzBatches:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class BatchInts:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...

class BatchFloats:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
read_mtz_file: nanobind.nb_func

class ReflnBlock:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    column_labels: ClassVar[nanobind.nb_method] = ...
    make_int_array: ClassVar[nanobind.nb_method] = ...
    make_float_array: ClassVar[nanobind.nb_method] = ...
    make_miller_array: ClassVar[nanobind.nb_method] = ...
    make_1_d2_array: ClassVar[nanobind.nb_method] = ...
    make_d_array: ClassVar[nanobind.nb_method] = ...
    get_size_for_hkl: ClassVar[nanobind.nb_method] = ...
    data_fits_into: ClassVar[nanobind.nb_method] = ...
    get_f_phi_on_grid: ClassVar[nanobind.nb_method] = ...
    get_value_on_grid: ClassVar[nanobind.nb_method] = ...
    transform_f_phi_to_map: ClassVar[nanobind.nb_method] = ...
    get_float: ClassVar[nanobind.nb_method] = ...
    get_int: ClassVar[nanobind.nb_method] = ...
    get_f_phi: ClassVar[nanobind.nb_method] = ...
    get_value_sigma: ClassVar[nanobind.nb_method] = ...
    is_merged: ClassVar[nanobind.nb_method] = ...
    is_unmerged: ClassVar[nanobind.nb_method] = ...
    use_unmerged: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    @property
    def block(self): ...
    @property
    def entry_id(self): ...
    @property
    def cell(self): ...
    @property
    def spacegroup(self): ...
    @property
    def wavelength(self): ...
    @property
    def default_loop(self): ...

class ReflnBlocks:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
as_refln_blocks: nanobind.nb_func
hkl_cif_as_refln_block: nanobind.nb_func
transform_f_phi_grid_to_map: nanobind.nb_func
transform_map_to_f_phi: nanobind.nb_func
cromer_liberman: nanobind.nb_func
count_reflections: nanobind.nb_func
make_miller_array: nanobind.nb_func

class CifToMtz:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    convert_block_to_mtz: ClassVar[nanobind.nb_method] = ...
    title: Incomplete
    history: Incomplete
    spec_lines: Incomplete

class MtzToCif:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    write_cif_to_string: ClassVar[nanobind.nb_method] = ...
    spec_lines: Incomplete
    with_comments: Incomplete
    with_history: Incomplete
    skip_empty: Incomplete
    skip_negative_sigi: Incomplete
    wavelength: Incomplete
    free_flag_value: Incomplete
validate_merged_intensities: nanobind.nb_func
get_software_from_mtz_history: nanobind.nb_func

class DataType(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Unknown: ClassVar[DataType] = ...
    Unmerged: ClassVar[DataType] = ...
    Mean: ClassVar[DataType] = ...
    Anomalous: ClassVar[DataType] = ...
    MergedMA: ClassVar[DataType] = ...
    MergedAM: ClassVar[DataType] = ...
    UAM: ClassVar[DataType] = ...
    @classmethod
    def __init__(cls, value) -> None: ...
check_data_type_under_symmetry: nanobind.nb_func

class MergingStats:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    r_merge: ClassVar[nanobind.nb_method] = ...
    r_meas: ClassVar[nanobind.nb_method] = ...
    r_pim: ClassVar[nanobind.nb_method] = ...
    cc_half: ClassVar[nanobind.nb_method] = ...
    cc_star: ClassVar[nanobind.nb_method] = ...
    @property
    def all_refl(self): ...
    @property
    def unique_refl(self): ...
    @property
    def stats_refl(self): ...

class Intensities:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    resolution_range: ClassVar[nanobind.nb_method] = ...
    remove_systematic_absences: ClassVar[nanobind.nb_method] = ...
    sort: ClassVar[nanobind.nb_method] = ...
    merge_in_place: ClassVar[nanobind.nb_method] = ...
    calculate_merging_stats: ClassVar[nanobind.nb_method] = ...
    prepare_for_merging: ClassVar[nanobind.nb_method] = ...
    calculate_correlation: ClassVar[nanobind.nb_method] = ...
    import_mtz: ClassVar[nanobind.nb_method] = ...
    import_xds: ClassVar[nanobind.nb_method] = ...
    import_refln_block: ClassVar[nanobind.nb_method] = ...
    prepare_merged_mtz: ClassVar[nanobind.nb_method] = ...
    set_data: ClassVar[nanobind.nb_method] = ...
    spacegroup: Incomplete
    unit_cell: Incomplete
    type: Incomplete
    @property
    def miller_array(self): ...
    @property
    def value_array(self): ...
    @property
    def sigma_array(self): ...
    @property
    def nobs_array(self): ...
    @property
    def isign_array(self): ...

class Binner:
    class Method(enum.Enum):
        _new_member_: ClassVar[builtin_function_or_method] = ...
        _use_args_: ClassVar[bool] = ...
        _member_names_: ClassVar[list] = ...
        _member_map_: ClassVar[dict] = ...
        _value2member_map_: ClassVar[dict] = ...
        _hashable_values_: ClassVar[list] = ...
        _unhashable_values_: ClassVar[list] = ...
        _unhashable_values_map_: ClassVar[dict] = ...
        _member_type_: ClassVar[type[object]] = ...
        _value_repr_: ClassVar[None] = ...
        __nb_enum__: ClassVar[PyCapsule] = ...
        EqualCount: ClassVar[Binner.Method] = ...
        Dstar: ClassVar[Binner.Method] = ...
        Dstar2: ClassVar[Binner.Method] = ...
        Dstar3: ClassVar[Binner.Method] = ...
        @classmethod
        def __init__(cls, value) -> None: ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    setup: ClassVar[nanobind.nb_method] = ...
    setup_from_1_d2: ClassVar[nanobind.nb_method] = ...
    get_bin: ClassVar[nanobind.nb_method] = ...
    get_bins: ClassVar[nanobind.nb_method] = ...
    get_bins_from_1_d2: ClassVar[nanobind.nb_method] = ...
    dmin_of_bin: ClassVar[nanobind.nb_method] = ...
    dmax_of_bin: ClassVar[nanobind.nb_method] = ...
    cell: Incomplete
    @property
    def size(self): ...
    @property
    def limits(self): ...
    @property
    def min_1_d2(self): ...
    @property
    def max_1_d2(self): ...
combine_correlations: nanobind.nb_func
calculate_amplitude_normalizers: nanobind.nb_func

class HklMatch:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    aligned: ClassVar[nanobind.nb_method] = ...
    @property
    def pos(self): ...

class ChemComp:
    class Atom:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        is_hydrogen: ClassVar[nanobind.nb_method] = ...
        id: Incomplete
        el: Incomplete
        charge: Incomplete
        chem_type: Incomplete

    class Group(enum.Enum):
        _new_member_: ClassVar[builtin_function_or_method] = ...
        _use_args_: ClassVar[bool] = ...
        _member_names_: ClassVar[list] = ...
        _member_map_: ClassVar[dict] = ...
        _value2member_map_: ClassVar[dict] = ...
        _hashable_values_: ClassVar[list] = ...
        _unhashable_values_: ClassVar[list] = ...
        _unhashable_values_map_: ClassVar[dict] = ...
        _member_type_: ClassVar[type[object]] = ...
        _value_repr_: ClassVar[None] = ...
        __nb_enum__: ClassVar[PyCapsule] = ...
        Peptide: ClassVar[ChemComp.Group] = ...
        PPeptide: ClassVar[ChemComp.Group] = ...
        MPeptide: ClassVar[ChemComp.Group] = ...
        Dna: ClassVar[ChemComp.Group] = ...
        Rna: ClassVar[ChemComp.Group] = ...
        DnaRna: ClassVar[ChemComp.Group] = ...
        Pyranose: ClassVar[ChemComp.Group] = ...
        Ketopyranose: ClassVar[ChemComp.Group] = ...
        Furanose: ClassVar[ChemComp.Group] = ...
        NonPolymer: ClassVar[ChemComp.Group] = ...
        Null: ClassVar[ChemComp.Group] = ...
        @classmethod
        def __init__(cls, value) -> None: ...

    class Aliasing:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        name_from_alias: ClassVar[nanobind.nb_method] = ...
        @property
        def group(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    read_group: ClassVar[nanobind.nb_func] = ...
    group_str: ClassVar[nanobind.nb_func] = ...
    set_group: ClassVar[nanobind.nb_method] = ...
    get_atom: ClassVar[nanobind.nb_method] = ...
    find_atom: ClassVar[nanobind.nb_method] = ...
    remove_hydrogens: ClassVar[nanobind.nb_method] = ...
    name: Incomplete
    group: Incomplete
    @property
    def atoms(self): ...
    @property
    def rt(self): ...

class Restraints:
    class Bond:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        lexicographic_str: ClassVar[nanobind.nb_method] = ...
        id1: Incomplete
        id2: Incomplete
        type: Incomplete
        aromatic: Incomplete
        value: Incomplete
        esd: Incomplete
        value_nucleus: Incomplete
        esd_nucleus: Incomplete

    class Angle:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        id1: Incomplete
        id2: Incomplete
        id3: Incomplete
        value: Incomplete
        esd: Incomplete

    class Torsion:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        label: Incomplete
        id1: Incomplete
        id2: Incomplete
        id3: Incomplete
        id4: Incomplete
        value: Incomplete
        esd: Incomplete
        period: Incomplete

    class Chirality:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        is_wrong: ClassVar[nanobind.nb_method] = ...
        id_ctr: Incomplete
        id1: Incomplete
        id2: Incomplete
        id3: Incomplete
        sign: Incomplete

    class Plane:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        label: Incomplete
        ids: Incomplete
        esd: Incomplete

    class DistanceOf(enum.Enum):
        _new_member_: ClassVar[builtin_function_or_method] = ...
        _use_args_: ClassVar[bool] = ...
        _member_names_: ClassVar[list] = ...
        _member_map_: ClassVar[dict] = ...
        _value2member_map_: ClassVar[dict] = ...
        _hashable_values_: ClassVar[list] = ...
        _unhashable_values_: ClassVar[list] = ...
        _unhashable_values_map_: ClassVar[dict] = ...
        _member_type_: ClassVar[type[object]] = ...
        _value_repr_: ClassVar[None] = ...
        __nb_enum__: ClassVar[PyCapsule] = ...
        ElectronCloud: ClassVar[Restraints.DistanceOf] = ...
        Nucleus: ClassVar[Restraints.DistanceOf] = ...
        @classmethod
        def __init__(cls, value) -> None: ...

    class AtomId:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        get_from: ClassVar[nanobind.nb_method] = ...
        comp: Incomplete
        atom: Incomplete
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    empty: ClassVar[nanobind.nb_method] = ...
    get_bond: ClassVar[nanobind.nb_method] = ...
    find_shortest_path: ClassVar[nanobind.nb_method] = ...
    chiral_abs_volume: ClassVar[nanobind.nb_method] = ...
    bonds: Incomplete
    angles: Incomplete
    torsions: Incomplete
    chirs: Incomplete
    planes: Incomplete

class RestraintsBonds:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class RestraintsAngles:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class RestraintsTorsions:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class RestraintsChirs:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class RestraintsPlanes:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class ChemCompAtoms:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class BondType(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Unspec: ClassVar[BondType] = ...
    Single: ClassVar[BondType] = ...
    Double: ClassVar[BondType] = ...
    Triple: ClassVar[BondType] = ...
    Aromatic: ClassVar[BondType] = ...
    Deloc: ClassVar[BondType] = ...
    Metal: ClassVar[BondType] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class ChiralityType(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Positive: ClassVar[ChiralityType] = ...
    Negative: ClassVar[ChiralityType] = ...
    Both: ClassVar[ChiralityType] = ...
    @classmethod
    def __init__(cls, value) -> None: ...
make_chemcomp_from_block: nanobind.nb_func
add_chemcomp_to_block: nanobind.nb_func

class ChemMod:
    class AtomMod:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        func: Incomplete
        old_id: Incomplete
        new_id: Incomplete
        el: Incomplete
        charge: Incomplete
        chem_type: Incomplete
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    name: Incomplete
    comp_id: Incomplete
    group_id: Incomplete
    atom_mods: Incomplete
    rt: Incomplete

class ChemLink:
    class Side:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[nanobind.nb_method] = ...
        comp: Incomplete
        mod: Incomplete
        group: Incomplete
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    id: Incomplete
    name: Incomplete
    side1: Incomplete
    side2: Incomplete
    rt: Incomplete

class ChemCompMap:
    class ItemView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class KeyView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __contains__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class ValueView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    update: ClassVar[nanobind.nb_method] = ...
    keys: ClassVar[nanobind.nb_method] = ...
    values: ClassVar[nanobind.nb_method] = ...
    items: ClassVar[nanobind.nb_method] = ...

class ChemLinkMap:
    class ItemView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class KeyView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __contains__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class ValueView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    update: ClassVar[nanobind.nb_method] = ...
    keys: ClassVar[nanobind.nb_method] = ...
    values: ClassVar[nanobind.nb_method] = ...
    items: ClassVar[nanobind.nb_method] = ...

class ChemModMap:
    class ItemView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class KeyView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __contains__: ClassVar[nanobind.nb_method] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...

    class ValueView:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        __len__: ClassVar[nanobind.nb_method] = ...
        __iter__: ClassVar[nanobind.nb_method] = ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    update: ClassVar[nanobind.nb_method] = ...
    keys: ClassVar[nanobind.nb_method] = ...
    values: ClassVar[nanobind.nb_method] = ...
    items: ClassVar[nanobind.nb_method] = ...

class EnerLib:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...

class MonLib:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    get_link: ClassVar[nanobind.nb_method] = ...
    get_mod: ClassVar[nanobind.nb_method] = ...
    match_link: ClassVar[nanobind.nb_method] = ...
    test_link: ClassVar[nanobind.nb_method] = ...
    add_monomer_if_present: ClassVar[nanobind.nb_method] = ...
    read_monomer_doc: ClassVar[nanobind.nb_method] = ...
    read_monomer_cif: ClassVar[nanobind.nb_method] = ...
    read_monomer_lib: ClassVar[nanobind.nb_method] = ...
    find_ideal_distance: ClassVar[nanobind.nb_method] = ...
    update_old_atom_names: ClassVar[nanobind.nb_method] = ...
    path: ClassVar[nanobind.nb_method] = ...
    clone: ClassVar[nanobind.nb_method] = ...
    monomer_dir: Incomplete
    @property
    def ener_lib(self): ...
    @property
    def monomers(self): ...
    @property
    def links(self): ...
    @property
    def modifications(self): ...
read_monomer_lib: nanobind.nb_func

class Topo:
    class Bond:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        calculate: ClassVar[nanobind.nb_method] = ...
        calculate_z: ClassVar[nanobind.nb_method] = ...
        @property
        def restr(self): ...
        @property
        def atoms(self): ...

    class Angle:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        calculate: ClassVar[nanobind.nb_method] = ...
        calculate_z: ClassVar[nanobind.nb_method] = ...
        @property
        def restr(self): ...
        @property
        def atoms(self): ...

    class Torsion:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        calculate: ClassVar[nanobind.nb_method] = ...
        calculate_z: ClassVar[nanobind.nb_method] = ...
        @property
        def restr(self): ...
        @property
        def atoms(self): ...

    class Chirality:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        calculate: ClassVar[nanobind.nb_method] = ...
        calculate_z: ClassVar[nanobind.nb_method] = ...
        check: ClassVar[nanobind.nb_method] = ...
        @property
        def restr(self): ...
        @property
        def atoms(self): ...

    class Plane:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        has: ClassVar[nanobind.nb_method] = ...
        @property
        def restr(self): ...
        @property
        def atoms(self): ...

    class Rule:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def rkind(self): ...
        @property
        def index(self): ...

    class Mod:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def id(self): ...
        @property
        def alias(self): ...
        @property
        def altloc(self): ...

    class FinalChemComp:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def altloc(self): ...
        @property
        def cc(self): ...

    class Link:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def link_id(self): ...
        @property
        def res1(self): ...
        @property
        def res2(self): ...
        @property
        def alt1(self): ...
        @property
        def alt2(self): ...
        @property
        def link_rules(self): ...

    class ResInfo:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        get_final_chemcomp: ClassVar[nanobind.nb_method] = ...
        @property
        def res(self): ...
        @property
        def prev(self): ...
        @property
        def mods(self): ...
        @property
        def chemcomps(self): ...
        @property
        def monomer_rules(self): ...

    class ChainInfo:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def chain_ref(self): ...
        @property
        def subchain_name(self): ...
        @property
        def entity_id(self): ...
        @property
        def polymer(self): ...
        @property
        def polymer_type(self): ...
        @property
        def res_infos(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    adjust_hydrogen_distances: ClassVar[nanobind.nb_method] = ...
    ideal_chiral_abs_volume: ClassVar[nanobind.nb_method] = ...
    links_to_previous: ClassVar[nanobind.nb_method] = ...
    first_bond_in_link: ClassVar[nanobind.nb_method] = ...
    set_cispeps_in_structure: ClassVar[nanobind.nb_method] = ...
    find_missing_atoms: ClassVar[nanobind.nb_method] = ...
    @property
    def bonds(self): ...
    @property
    def angles(self): ...
    @property
    def torsions(self): ...
    @property
    def chirs(self): ...
    @property
    def planes(self): ...
    @property
    def extras(self): ...
    @property
    def chain_infos(self): ...

class HydrogenChange(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    NoChange: ClassVar[HydrogenChange] = ...
    Shift: ClassVar[HydrogenChange] = ...
    Remove: ClassVar[HydrogenChange] = ...
    ReAdd: ClassVar[HydrogenChange] = ...
    ReAddButWater: ClassVar[HydrogenChange] = ...
    ReAddKnown: ClassVar[HydrogenChange] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class TopoBonds:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoAngles:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoTorsions:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoChirs:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoPlanes:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class RKind(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Bond: ClassVar[RKind] = ...
    Angle: ClassVar[RKind] = ...
    Torsion: ClassVar[RKind] = ...
    Chirality: ClassVar[RKind] = ...
    Plane: ClassVar[RKind] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class TopoRules:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoMods:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __ne__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    count: ClassVar[nanobind.nb_method] = ...
    remove: ClassVar[nanobind.nb_method] = ...

class TopoFinalChemComps:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoLinks:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoResInfos:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...

class TopoChainInfos:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
prepare_topology: nanobind.nb_func
setup_for_crd: nanobind.nb_func
prepare_refmac_crd: nanobind.nb_func
add_automatic_links: nanobind.nb_func
add_dictionary_blocks: nanobind.nb_func

class AlignmentResult:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    cigar_str: ClassVar[nanobind.nb_method] = ...
    calculate_identity: ClassVar[nanobind.nb_method] = ...
    add_gaps: ClassVar[nanobind.nb_method] = ...
    formatted: ClassVar[nanobind.nb_method] = ...
    @property
    def score(self): ...
    @property
    def match_count(self): ...
    @property
    def match_string(self): ...

class AlignmentScoring:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    match: Incomplete
    mismatch: Incomplete
    gapo: Incomplete
    gape: Incomplete
    good_gapo: Incomplete
    bad_gapo: Incomplete
align_string_sequences: nanobind.nb_func
align_sequence_to_polymer: nanobind.nb_func

class SupSelect(enum.Enum):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[object]] = ...
    _value_repr_: ClassVar[None] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    CaP: ClassVar[SupSelect] = ...
    MainChain: ClassVar[SupSelect] = ...
    All: ClassVar[SupSelect] = ...
    @classmethod
    def __init__(cls, value) -> None: ...

class SupResult:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[wrapper_descriptor] = ...
    @property
    def rmsd(self): ...
    @property
    def count(self): ...
    @property
    def center1(self): ...
    @property
    def center2(self): ...
    @property
    def transform(self): ...
calculate_current_rmsd: nanobind.nb_func
calculate_superposition: nanobind.nb_func
calculate_superpositions_in_moving_window: nanobind.nb_func
superpose_positions: nanobind.nb_func

class NeighborSearch:
    class Mark:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        to_cra: ClassVar[nanobind.nb_method] = ...
        to_site: ClassVar[nanobind.nb_method] = ...
        @property
        def pos(self): ...
        @property
        def altloc(self): ...
        @property
        def element(self): ...
        @property
        def image_idx(self): ...
        @property
        def chain_idx(self): ...
        @property
        def residue_idx(self): ...
        @property
        def atom_idx(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    populate: ClassVar[nanobind.nb_method] = ...
    add_chain: ClassVar[nanobind.nb_method] = ...
    add_atom: ClassVar[nanobind.nb_method] = ...
    add_site: ClassVar[nanobind.nb_method] = ...
    find_atoms: ClassVar[nanobind.nb_method] = ...
    find_neighbors: ClassVar[nanobind.nb_method] = ...
    find_nearest_atom: ClassVar[nanobind.nb_method] = ...
    find_site_neighbors: ClassVar[nanobind.nb_method] = ...
    dist: ClassVar[nanobind.nb_method] = ...
    get_image_transformation: ClassVar[nanobind.nb_method] = ...
    @property
    def radius_specified(self): ...
    @property
    def grid_cell(self): ...

class VectorMarkPtr:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    __len__: ClassVar[nanobind.nb_method] = ...
    __bool__: ClassVar[nanobind.nb_method] = ...
    __iter__: ClassVar[nanobind.nb_method] = ...
    __getitem__: ClassVar[nanobind.nb_method] = ...
    clear: ClassVar[nanobind.nb_method] = ...
    append: ClassVar[nanobind.nb_method] = ...
    insert: ClassVar[nanobind.nb_method] = ...
    pop: ClassVar[nanobind.nb_method] = ...
    extend: ClassVar[nanobind.nb_method] = ...
    __setitem__: ClassVar[nanobind.nb_method] = ...
    __delitem__: ClassVar[nanobind.nb_method] = ...
    __eq__: ClassVar[nanobind.nb_method] = ...
    __ne__: ClassVar[nanobind.nb_method] = ...
    __contains__: ClassVar[nanobind.nb_method] = ...
    count: ClassVar[nanobind.nb_method] = ...
    remove: ClassVar[nanobind.nb_method] = ...

class ContactSearch:
    class Ignore(enum.Enum):
        _new_member_: ClassVar[builtin_function_or_method] = ...
        _use_args_: ClassVar[bool] = ...
        _member_names_: ClassVar[list] = ...
        _member_map_: ClassVar[dict] = ...
        _value2member_map_: ClassVar[dict] = ...
        _hashable_values_: ClassVar[list] = ...
        _unhashable_values_: ClassVar[list] = ...
        _unhashable_values_map_: ClassVar[dict] = ...
        _member_type_: ClassVar[type[object]] = ...
        _value_repr_: ClassVar[None] = ...
        __nb_enum__: ClassVar[PyCapsule] = ...
        Nothing: ClassVar[ContactSearch.Ignore] = ...
        SameResidue: ClassVar[ContactSearch.Ignore] = ...
        AdjacentResidues: ClassVar[ContactSearch.Ignore] = ...
        SameChain: ClassVar[ContactSearch.Ignore] = ...
        SameAsu: ClassVar[ContactSearch.Ignore] = ...
        @classmethod
        def __init__(cls, value) -> None: ...

    class Result:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def partner1(self): ...
        @property
        def partner2(self): ...
        @property
        def image_idx(self): ...
        @property
        def dist(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    setup_atomic_radii: ClassVar[nanobind.nb_method] = ...
    get_radius: ClassVar[nanobind.nb_method] = ...
    set_radius: ClassVar[nanobind.nb_method] = ...
    find_contacts: ClassVar[nanobind.nb_method] = ...
    search_radius: Incomplete
    ignore: Incomplete
    twice: Incomplete
    special_pos_cutoff_sq: Incomplete
    min_occupancy: Incomplete

class LinkHunt:
    class Match:
        __new__: ClassVar[builtin_function_or_method] = ...
        __init__: ClassVar[wrapper_descriptor] = ...
        @property
        def chem_link(self): ...
        @property
        def chem_link_count(self): ...
        @property
        def cra1(self): ...
        @property
        def cra2(self): ...
        @property
        def same_image(self): ...
        @property
        def bond_length(self): ...
        @property
        def conn(self): ...
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    index_chem_links: ClassVar[nanobind.nb_method] = ...
    find_possible_links: ClassVar[nanobind.nb_method] = ...

class BondIndex:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    add_link: ClassVar[nanobind.nb_method] = ...
    add_monomer_bonds: ClassVar[nanobind.nb_method] = ...
    are_linked: ClassVar[nanobind.nb_method] = ...
    graph_distance: ClassVar[nanobind.nb_method] = ...

class ChemCompModel(enum.IntFlag):
    _new_member_: ClassVar[builtin_function_or_method] = ...
    _use_args_: ClassVar[bool] = ...
    _member_names_: ClassVar[list] = ...
    _member_map_: ClassVar[dict] = ...
    _value2member_map_: ClassVar[dict] = ...
    _hashable_values_: ClassVar[list] = ...
    _unhashable_values_: ClassVar[list] = ...
    _unhashable_values_map_: ClassVar[dict] = ...
    _member_type_: ClassVar[type[int]] = ...
    _value_repr_: ClassVar[wrapper_descriptor] = ...
    _boundary_: ClassVar[enum.FlagBoundary] = ...
    _flag_mask_: ClassVar[int] = ...
    _singles_mask_: ClassVar[int] = ...
    _all_bits_: ClassVar[int] = ...
    _inverted_: ClassVar[None] = ...
    __format__: ClassVar[method_descriptor] = ...
    __nb_enum__: ClassVar[PyCapsule] = ...
    Xyz: ClassVar[ChemCompModel] = ...
    Example: ClassVar[ChemCompModel] = ...
    Ideal: ClassVar[ChemCompModel] = ...
    def __or__(self, other): ...
    def __and__(self, other): ...
    def __xor__(self, other): ...
    def __ror__(self, other): ...
    def __rand__(self, other): ...
    def __rxor__(self, other): ...
    def __invert__(self): ...
    @classmethod
    def __init__(cls, value) -> None: ...
read_structure: nanobind.nb_func
make_structure_from_block: nanobind.nb_func
make_structure_from_chemcomp_block: nanobind.nb_func
read_pdb_string: nanobind.nb_func
read_pdb: nanobind.nb_func
read_small_structure: nanobind.nb_func
make_small_structure_from_block: nanobind.nb_func
estimate_uncompressed_size: nanobind.nb_func
adp_symmetry_constraints: nanobind.nb_func

class Scaling:
    __new__: ClassVar[builtin_function_or_method] = ...
    __init__: ClassVar[nanobind.nb_method] = ...
    prepare_points: ClassVar[nanobind.nb_method] = ...
    fit_isotropic_b_approximately: ClassVar[nanobind.nb_method] = ...
    fit_b_star_approximately: ClassVar[nanobind.nb_method] = ...
    fit_parameters: ClassVar[nanobind.nb_method] = ...
    calculate_r_factor: ClassVar[nanobind.nb_method] = ...
    get_overall_scale_factor: ClassVar[nanobind.nb_method] = ...
    get_solvent_scale: ClassVar[nanobind.nb_method] = ...
    scale_data: ClassVar[nanobind.nb_method] = ...
    scale_value: ClassVar[nanobind.nb_method] = ...
    cell: Incomplete
    k_overall: Incomplete
    b_overall: Incomplete
    use_solvent: Incomplete
    k_sol: Incomplete
    b_sol: Incomplete
    parameters: Incomplete
set_leak_warnings: nanobind.nb_func
