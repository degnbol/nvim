from Bio.Pathway.Rep.MultiGraph import MultiGraph as MultiGraph
from _typeshed import Incomplete

class Reaction:
    reactants: Incomplete
    catalysts: Incomplete
    data: Incomplete
    reversible: Incomplete
    def __init__(self, reactants: Incomplete | None = None, catalysts=(), reversible: int = 0, data: Incomplete | None = None) -> None: ...
    def __eq__(self, r): ...
    def __hash__(self): ...
    def reverse(self): ...
    def species(self): ...

class System:
    def __init__(self, reactions=()) -> None: ...
    def add_reaction(self, reaction) -> None: ...
    def remove_reaction(self, reaction) -> None: ...
    def reactions(self): ...
    def species(self): ...
    def stochiometry(self): ...

class Interaction:
    def __hash__(self): ...

class Network:
    def __init__(self, species=()) -> None: ...
    def add_species(self, species) -> None: ...
    def add_interaction(self, source, sink, interaction) -> None: ...
    def source(self, species): ...
    def source_interactions(self, species): ...
    def sink(self, species): ...
    def sink_interactions(self, species): ...
    def species(self): ...
    def interactions(self): ...
