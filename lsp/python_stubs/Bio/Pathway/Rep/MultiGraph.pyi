from _typeshed import Incomplete

class MultiGraph:
    def __init__(self, nodes=()) -> None: ...
    def __eq__(self, g): ...
    def add_node(self, node) -> None: ...
    def add_edge(self, source, to, label: Incomplete | None = None) -> None: ...
    def child_edges(self, parent): ...
    def children(self, parent): ...
    def edges(self, label): ...
    def labels(self): ...
    def nodes(self): ...
    def parent_edges(self, child): ...
    def parents(self, child): ...
    def remove_node(self, node) -> None: ...
    def remove_edge(self, parent, child, label) -> None: ...

def df_search(graph, root: Incomplete | None = None): ...
def bf_search(graph, root: Incomplete | None = None): ...
