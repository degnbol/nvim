from .Interfaces import _TextIOSource
from Bio.File import as_handle as as_handle
from Bio.SeqIO import AbiIO as AbiIO, AceIO as AceIO, FastaIO as FastaIO, GckIO as GckIO, GfaIO as GfaIO, IgIO as IgIO, InsdcIO as InsdcIO, NibIO as NibIO, PdbIO as PdbIO, PhdIO as PhdIO, PirIO as PirIO, QualityIO as QualityIO, SeqXmlIO as SeqXmlIO, SffIO as SffIO, SnapGeneIO as SnapGeneIO, SwissIO as SwissIO, TabIO as TabIO, TwoBitIO as TwoBitIO, UniprotIO as UniprotIO, XdnaIO as XdnaIO
from Bio.SeqRecord import SeqRecord as SeqRecord
from _typeshed import Incomplete
from collections.abc import Iterable

def write(sequences: Iterable[SeqRecord] | SeqRecord, handle: _TextIOSource, format: str) -> int: ...
def parse(handle, format, alphabet: Incomplete | None = None): ...
def read(handle, format, alphabet: Incomplete | None = None): ...
def to_dict(sequences, key_function: Incomplete | None = None): ...
def index(filename, format, alphabet: Incomplete | None = None, key_function: Incomplete | None = None): ...
def index_db(index_filename, filenames: Incomplete | None = None, format: Incomplete | None = None, alphabet: Incomplete | None = None, key_function: Incomplete | None = None): ...
def convert(in_file, in_format, out_file, out_format, molecule_type: Incomplete | None = None): ...
