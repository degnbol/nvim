from .Controller import GenePopController as GenePopController
from Bio.PopGen import GenePop as GenePop
from _typeshed import Incomplete

class EasyController:
    def __init__(self, fname, genepop_dir: Incomplete | None = None) -> None: ...
    def get_basic_info(self): ...
    def test_hw_pop(self, pop_pos, test_type: str = 'probability'): ...
    def test_hw_global(self, test_type: str = 'deficiency', enum_test: bool = True, dememorization: int = 10000, batches: int = 20, iterations: int = 5000): ...
    def test_ld_all_pair(self, locus1, locus2, dememorization: int = 10000, batches: int = 20, iterations: int = 5000): ...
    def estimate_nm(self): ...
    def get_heterozygosity_info(self, pop_pos, locus_name): ...
    def get_genotype_count(self, pop_pos, locus_name): ...
    def get_fis(self, pop_pos, locus_name): ...
    def get_alleles(self, pop_pos, locus_name): ...
    def get_alleles_all_pops(self, locus_name): ...
    def get_allele_frequency(self, pop_pos, locus_name): ...
    def get_multilocus_f_stats(self): ...
    def get_f_stats(self, locus_name): ...
    def get_avg_fis(self): ...
    def get_avg_fst_pair(self): ...
    def get_avg_fst_pair_locus(self, locus): ...
    def calc_ibd(self, is_diplo: bool = True, stat: str = 'a', scale: str = 'Log', min_dist: float = 1e-05): ...
