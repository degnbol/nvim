from ._AbstractDrawer import AbstractDrawer as AbstractDrawer, angle2trig as angle2trig, deduplicate as deduplicate, draw_arrow as draw_arrow, draw_box as draw_box, draw_cut_corner_box as draw_cut_corner_box, intermediate_points as intermediate_points
from ._FeatureSet import FeatureSet as FeatureSet
from ._GraphSet import GraphSet as GraphSet
from _typeshed import Incomplete

class LinearDrawer(AbstractDrawer):
    fragments: Incomplete
    fragment_size: Incomplete
    track_size: Incomplete
    def __init__(self, parent: Incomplete | None = None, pagesize: str = 'A3', orientation: str = 'landscape', x: float = 0.05, y: float = 0.05, xl: Incomplete | None = None, xr: Incomplete | None = None, yt: Incomplete | None = None, yb: Incomplete | None = None, start: Incomplete | None = None, end: Incomplete | None = None, tracklines: int = 0, fragments: int = 10, fragment_size: Incomplete | None = None, track_size: float = 0.75, cross_track_links: Incomplete | None = None) -> None: ...
    drawing: Incomplete
    drawn_tracks: Incomplete
    current_track_level: Incomplete
    def draw(self) -> None: ...
    fragment_height: Incomplete
    fragment_bases: Incomplete
    fragment_lines: Incomplete
    fragment_limits: Incomplete
    def init_fragments(self) -> None: ...
    track_offsets: Incomplete
    def set_track_heights(self) -> None: ...
    def draw_test_tracks(self) -> None: ...
    def draw_track(self, track): ...
    def draw_tick(self, tickpos, ctr, ticklen, track, draw_label): ...
    def draw_scale(self, track): ...
    def draw_greytrack(self, track): ...
    def draw_feature_set(self, set): ...
    def draw_feature(self, feature): ...
    def draw_feature_location(self, feature, locstart, locend): ...
    def draw_cross_link(self, cross_link): ...
    def get_feature_sigil(self, feature, x0, x1, fragment, **kwargs): ...
    def draw_graph_set(self, set): ...
    def draw_line_graph(self, graph): ...
    def draw_heat_graph(self, graph): ...
    def draw_bar_graph(self, graph): ...
    def canvas_location(self, base): ...
