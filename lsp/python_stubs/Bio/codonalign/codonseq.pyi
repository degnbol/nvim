from Bio.Data import CodonTable as CodonTable
from Bio.Seq import Seq as Seq
from Bio.SeqRecord import SeqRecord as SeqRecord
from _typeshed import Incomplete

class CodonSeq(Seq):
    gap_char: Incomplete
    rf_table: Incomplete
    def __init__(self, data: str = '', gap_char: str = '-', rf_table: Incomplete | None = None) -> None: ...
    def get_codon(self, index): ...
    def get_codon_num(self): ...
    def translate(self, codon_table: Incomplete | None = None, stop_symbol: str = '*', rf_table: Incomplete | None = None, ungap_seq: bool = True): ...
    def toSeq(self): ...
    def get_full_rf_table(self): ...
    def full_translate(self, codon_table: Incomplete | None = None, stop_symbol: str = '*'): ...
    def ungap(self, gap: str = '-'): ...
    @classmethod
    def from_seq(cls, seq, rf_table: Incomplete | None = None): ...

def cal_dn_ds(codon_seq1, codon_seq2, method: str = 'NG86', codon_table: Incomplete | None = None, k: int = 1, cfreq: Incomplete | None = None): ...
