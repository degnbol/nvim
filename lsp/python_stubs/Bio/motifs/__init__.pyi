from Bio import BiopythonDeprecationWarning as BiopythonDeprecationWarning, MissingPythonDependencyError as MissingPythonDependencyError
from Bio.Align import Alignment as Alignment
from Bio.Seq import reverse_complement as reverse_complement, reverse_complement_rna as reverse_complement_rna
from _typeshed import Incomplete
from collections.abc import Generator

def create(instances, alphabet: str = 'ACGT'): ...
def parse(handle, fmt, strict: bool = True): ...
def read(handle, fmt, strict: bool = True): ...

class Instances(list):
    length: Incomplete
    alphabet: Incomplete
    def __init__(self, instances: Incomplete | None = None, alphabet: str = 'ACGT') -> None: ...
    def count(self): ...
    def search(self, sequence) -> Generator[Incomplete]: ...
    def reverse_complement(self): ...

class Motif:
    name: str
    alignment: Incomplete
    counts: Incomplete
    length: Incomplete
    alphabet: Incomplete
    pseudocounts: Incomplete
    background: Incomplete
    mask: Incomplete
    def __init__(self, alphabet: str = 'ACGT', alignment: Incomplete | None = None, counts: Incomplete | None = None, instances: Incomplete | None = None) -> None: ...
    def __getitem__(self, key): ...
    @property
    def pwm(self): ...
    @property
    def pssm(self): ...
    @property
    def instances(self): ...
    def __len__(self) -> int: ...
    def reverse_complement(self): ...
    @property
    def consensus(self): ...
    @property
    def anticonsensus(self): ...
    @property
    def degenerate_consensus(self): ...
    @property
    def relative_entropy(self): ...
    def weblogo(self, fname, fmt: str = 'PNG', version: Incomplete | None = None, **kwds) -> None: ...
    def __format__(self, format_spec, **kwargs) -> str: ...
    def format(self, format_spec): ...

def write(motifs, fmt, **kwargs): ...
