from Bio.PDB.Chain import Chain as Chain
from Bio.PDB.Entity import Entity as Entity
from Bio.PDB.Structure import Structure as Structure
from Bio.PDB.internal_coords import IC_Chain as IC_Chain
from _typeshed import Incomplete
from collections.abc import Generator

class Model(Entity['Structure', 'Chain']):
    level: str
    serial_num: Incomplete
    def __init__(self, id, serial_num: Incomplete | None = None) -> None: ...
    def get_chains(self) -> Generator[Incomplete, Incomplete]: ...
    def get_residues(self) -> Generator[Incomplete, Incomplete]: ...
    def get_atoms(self) -> Generator[Incomplete, Incomplete]: ...
    def atom_to_internal_coordinates(self, verbose: bool = False) -> None: ...
    def internal_to_atom_coordinates(self, verbose: bool = False) -> None: ...
