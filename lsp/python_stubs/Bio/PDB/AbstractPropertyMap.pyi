from _typeshed import Incomplete

class AbstractPropertyMap:
    property_dict: Incomplete
    property_keys: Incomplete
    property_list: Incomplete
    def __init__(self, property_dict, property_keys, property_list) -> None: ...
    def __contains__(self, id) -> bool: ...
    def __getitem__(self, key): ...
    def __len__(self) -> int: ...
    def keys(self): ...
    def __iter__(self): ...

class AbstractResiduePropertyMap(AbstractPropertyMap):
    def __init__(self, property_dict, property_keys, property_list) -> None: ...

class AbstractAtomPropertyMap(AbstractPropertyMap):
    def __init__(self, property_dict, property_keys, property_list) -> None: ...
