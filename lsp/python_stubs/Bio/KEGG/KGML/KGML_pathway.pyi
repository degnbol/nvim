from _typeshed import Incomplete

class Pathway:
    org: str
    title: str
    image: str
    link: str
    entries: Incomplete
    def __init__(self) -> None: ...
    def get_KGML(self): ...
    def add_entry(self, entry) -> None: ...
    def remove_entry(self, entry) -> None: ...
    def add_reaction(self, reaction) -> None: ...
    def remove_reaction(self, reaction) -> None: ...
    def add_relation(self, relation) -> None: ...
    def remove_relation(self, relation) -> None: ...
    name: Incomplete
    number: Incomplete
    @property
    def compounds(self): ...
    @property
    def maps(self): ...
    @property
    def orthologs(self): ...
    @property
    def genes(self): ...
    @property
    def reactions(self): ...
    @property
    def reaction_entries(self): ...
    @property
    def relations(self): ...
    @property
    def element(self): ...
    @property
    def bounds(self): ...

class Entry:
    type: str
    image: str
    link: str
    graphics: Incomplete
    components: Incomplete
    alt: Incomplete
    def __init__(self) -> None: ...
    def add_component(self, element) -> None: ...
    def remove_component(self, value) -> None: ...
    def add_graphics(self, entry) -> None: ...
    def remove_graphics(self, entry) -> None: ...
    name: Incomplete
    reaction: Incomplete
    id: Incomplete
    @property
    def element(self): ...
    @property
    def bounds(self): ...
    @property
    def is_reactant(self): ...

class Component:
    def __init__(self, parent) -> None: ...
    id: Incomplete
    @property
    def element(self): ...

class Graphics:
    name: str
    type: str
    fgcolor: str
    bgcolor: str
    def __init__(self, parent) -> None: ...
    x: Incomplete
    y: Incomplete
    width: Incomplete
    height: Incomplete
    coords: Incomplete
    @property
    def element(self): ...
    @property
    def bounds(self): ...
    @property
    def centre(self): ...

class Reaction:
    type: str
    def __init__(self) -> None: ...
    def add_substrate(self, substrate_id) -> None: ...
    def add_product(self, product_id) -> None: ...
    id: Incomplete
    name: Incomplete
    @property
    def substrates(self): ...
    @property
    def products(self): ...
    @property
    def entry(self): ...
    @property
    def reactant_ids(self): ...
    @property
    def element(self): ...

class Relation:
    type: str
    subtypes: Incomplete
    def __init__(self) -> None: ...
    entry1: Incomplete
    entry2: Incomplete
    @property
    def element(self): ...
